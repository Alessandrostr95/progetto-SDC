{
  "contractName": "GreenPassCertification",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "CERTIFICATION_MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "enum Region.Regions",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "colors",
      "outputs": [
        {
          "internalType": "enum Region.Colors",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "enum Certification.CertificationType",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "durations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "grantCertificationMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "revokeCertificationMinterRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "enum Certification.CertificationType",
          "name": "certificationType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "qrcode",
          "type": "string"
        }
      ],
      "name": "emitCertification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "qrcode",
          "type": "string"
        }
      ],
      "name": "isExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "qrcode",
          "type": "string"
        }
      ],
      "name": "invalidateCertificate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Region.Regions",
          "name": "region",
          "type": "uint8"
        },
        {
          "internalType": "enum Region.Colors",
          "name": "color",
          "type": "uint8"
        }
      ],
      "name": "setRegionColor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Certification.CertificationType",
          "name": "certificationType",
          "type": "uint8"
        },
        {
          "internalType": "enum Region.Colors",
          "name": "color",
          "type": "uint8"
        },
        {
          "internalType": "enum Activity.Activities",
          "name": "activity",
          "type": "uint8"
        }
      ],
      "name": "addRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Certification.CertificationType",
          "name": "certificationType",
          "type": "uint8"
        },
        {
          "internalType": "enum Region.Colors",
          "name": "color",
          "type": "uint8"
        },
        {
          "internalType": "enum Activity.Activities",
          "name": "activity",
          "type": "uint8"
        }
      ],
      "name": "removeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "qrcode",
          "type": "string"
        },
        {
          "internalType": "enum Activity.Activities",
          "name": "activity",
          "type": "uint8"
        },
        {
          "internalType": "enum Region.Regions",
          "name": "region",
          "type": "uint8"
        }
      ],
      "name": "canDo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CERTIFICATION_MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Certification.CertificationType\",\"name\":\"certificationType\",\"type\":\"uint8\"},{\"internalType\":\"enum Region.Colors\",\"name\":\"color\",\"type\":\"uint8\"},{\"internalType\":\"enum Activity.Activities\",\"name\":\"activity\",\"type\":\"uint8\"}],\"name\":\"addRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"qrcode\",\"type\":\"string\"},{\"internalType\":\"enum Activity.Activities\",\"name\":\"activity\",\"type\":\"uint8\"},{\"internalType\":\"enum Region.Regions\",\"name\":\"region\",\"type\":\"uint8\"}],\"name\":\"canDo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Region.Regions\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"colors\",\"outputs\":[{\"internalType\":\"enum Region.Colors\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Certification.CertificationType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"durations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Certification.CertificationType\",\"name\":\"certificationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"qrcode\",\"type\":\"string\"}],\"name\":\"emitCertification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"grantCertificationMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"qrcode\",\"type\":\"string\"}],\"name\":\"invalidateCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"qrcode\",\"type\":\"string\"}],\"name\":\"isExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Certification.CertificationType\",\"name\":\"certificationType\",\"type\":\"uint8\"},{\"internalType\":\"enum Region.Colors\",\"name\":\"color\",\"type\":\"uint8\"},{\"internalType\":\"enum Activity.Activities\",\"name\":\"activity\",\"type\":\"uint8\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"revokeCertificationMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Region.Regions\",\"name\":\"region\",\"type\":\"uint8\"},{\"internalType\":\"enum Region.Colors\",\"name\":\"color\",\"type\":\"uint8\"}],\"name\":\"setRegionColor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alessandro Straziota, Michele Cirillo\",\"details\":\"Contratto che offre strumenti utili per la verifica della validit\\u00e0 dei green pass rispetto a determinate attivit\\u00e0.\",\"kind\":\"dev\",\"methods\":{\"addRole(uint8,uint8,uint8)\":{\"details\":\"funzione che aggiunge una nuova regola all'insieme di regole valide. Solo un indirizzo con ruolo `ADMIN_ROLE` pu\\u00f2 invocare questa funzione.\",\"params\":{\"activity\":\"l'attivit\\u00e0 in questione.\",\"certificationType\":\"il tipo della certificazione.\",\"color\":\"il colore della regione.\"}},\"canDo(string,uint8,uint8)\":{\"details\":\"funzione che dato un codice QR relativo a un greenpass ritorna `true` se \\u00e8 consentito effettuare una data attivit\\u00e0 `activity` in una data regione `region`.\",\"params\":{\"activity\":\"l'attivit\\u00e0 che si desidera svolgare.\",\"qrcode\":\"il qrcode di un greenpass.\",\"region\":\"la regione in cui si desidera svolgere l'attivit\\u00e0.\"},\"returns\":{\"_0\":\"`true` se \\u00e8 consentito svolgere tale attivit\\u00e0, `false` altrimenti.\"}},\"emitCertification(uint8,string)\":{\"details\":\"Funzione che genera un certificato di tipo `certificationType` e lo assoccia al suo identificatore `qrcode`. La transazione va a buon fine solo se colui che invoca il metodo `msg.sender` ha il ruolo `CERTIFICATION_MINTER_ROLE`.\",\"params\":{\"certificationType\":\"il tipo del certificato rilasciato\",\"qrcode\":\"il codice qr del certificato\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantCertificationMinterRole(address)\":{\"details\":\"funzione che assegna il ruolo `CERTIFICATION_MINTER_ROLE` che consente ad un indirizzo di generare nuovi certificati. Questo metodo pu\\u00f2 essere invocato solamente dagli indirizzi con il ruolo `ADMIN_ROLE`.\",\"params\":{\"to\":\"indirizzo a cui assegnare ruolo `CERTIFICATION_MINTER_ROLE`.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"invalidateCertificate(string)\":{\"details\":\"Funzione che dato il QR-code di un green pass lo invalida. Solo un indirizzo con ruolo `CERTIFICATION_MINTER_ROLE` pu\\u00f2 invocare questa funzione.\"},\"isExpired(string)\":{\"details\":\"Funzione che dato il QR-code di un green pass ritorna `true` se \\u00e8 scaduto, `false` altrimenti.\",\"params\":{\"qrcode\":\"il QR-code presente su un green pass\"},\"returns\":{\"_0\":\"isExpired\"}},\"removeRole(uint8,uint8,uint8)\":{\"details\":\"funzione che rimuove una regola all'insieme di regole valide. Solo un indirizzo con ruolo `ADMIN_ROLE` pu\\u00f2 invocare questa funzione.\",\"params\":{\"activity\":\"l'attivit\\u00e0 in questione.\",\"certificationType\":\"il tipo della certificazione.\",\"color\":\"il colore della regione.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeCertificationMinterRole(address)\":{\"details\":\"funzione che revoca il ruolo `CERTIFICATION_MINTER_ROLE` ad un indirizzo. Questo metodo pu\\u00f2 essere invocato solamente dagli indirizzi con il ruolo `ADMIN_ROLE`. See {grantCertificationMinterRole}.\",\"params\":{\"to\":\"indirizzo a cui assegnare ruolo `CERTIFICATION_MINTER_ROLE`.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setRegionColor(uint8,uint8)\":{\"details\":\"Funzione che assegna il colore `color` alla regione `region`. Solo un indirizzo con ruolo `ADMIN_ROLE` pu\\u00f2 invocare questa funzione.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"certificates\":{\"details\":\"mappa `QRCODE` => `GreenPass`\"}},\"title\":\"GreenPassCertification contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contratto che offre strumenti utili per la verifica della validit\\u00e0 dei green pass rispetto a determinate attivit\\u00e0.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GreenPassCertification.sol\":\"GreenPassCertification\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"project:/contracts/Activity.sol\":{\"keccak256\":\"0xad5268c04bb1852aca1126a11ca29f9fb2357fd1b96101fece297cc938f494ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4977eb4c41c1188d4f44ea31a6ce9605964a7570940d5f09dbed47c7078ac269\",\"dweb:/ipfs/QmcQBMD7cHzxmEgmfaLDVF1JhBnNay3N59RdgmT8mxq2Dc\"]},\"project:/contracts/Certification.sol\":{\"keccak256\":\"0x817a5e0f67bb2e381a8d56a5733cd5421c614e52eee49e39eb8aad8b017ac09a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5549f7b28d1c8d0ff1f1a9e90d83c7f3693c43a066e44e5a0950bd5e19169203\",\"dweb:/ipfs/QmTqQVQ9TXD2tU9h8p7p7RvDy3TUE4Ut6hLjfnpk32TGBq\"]},\"project:/contracts/GreenPassCertification.sol\":{\"keccak256\":\"0x007e89ec9eaa6887555889059fa0ba86a0b5c71342257e1a70b60e76090a4a2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38cc459d537823d2e2f5ee146514fc9962ec517958bc8fdf69c0ca435758012c\",\"dweb:/ipfs/QmZVveio7ZTdX4xBTFHmjPnmXRVuJ3ChnuP8hb8VZvyZN2\"]},\"project:/contracts/Region.sol\":{\"keccak256\":\"0x8f9add2142fd806fc4bb08aaef338bb06948f5a2c48745ca130fe5c9e124d327\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79606a95462b580f3c19486699893226fca8a3f3ae06e2d48b4e04d1e3064360\",\"dweb:/ipfs/QmdoJUNwYewuQwk4DdH7XJ461XoVQPQUvSEhy7djdvZgW6\"]},\"project:/contracts/RolesManager.sol\":{\"keccak256\":\"0x7c865b63568764e003a9e5cc03b4c3f06fd8ac1f24cc91280bb84f346151d6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29469f1f7d77082e0882049550ff6f8088b62ea974472251e54573fbac55342e\",\"dweb:/ipfs/QmZw2NsLtYeR3xGu2qsRbZaq3HuhkMELosBNAc8nxvCSin\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:190:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:12",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:12"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:12"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:23441:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:12",
                "type": ""
              }
            ],
            "src": "7:75:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:12"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:12"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:105:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "388:89:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "403:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "410:66:12",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "399:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:78:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "388:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "360:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "370:7:12",
                "type": ""
              }
            ],
            "src": "334:149:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "531:78:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "587:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "596:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "589:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "589:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "589:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "554:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "578:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "561:16:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "561:23:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "551:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "551:34:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:42:12"
                  },
                  "nodeType": "YulIf",
                  "src": "541:62:12"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "524:5:12",
                "type": ""
              }
            ],
            "src": "489:120:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:86:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "698:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "685:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "676:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "740:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "714:25:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:32:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "714:32:12"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "652:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "660:5:12",
                "type": ""
              }
            ],
            "src": "615:137:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "823:262:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "869:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "871:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "871:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "871:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "844:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "853:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "840:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "840:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "865:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "836:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "833:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "962:116:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "977:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "991:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "981:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1006:62:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1040:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1051:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1036:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1036:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1060:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "1016:19:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1016:52:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1006:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "793:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "804:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "816:6:12",
                "type": ""
              }
            ],
            "src": "758:327:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1133:48:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1143:32:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1168:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1161:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:21:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1143:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1115:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1125:7:12",
                "type": ""
              }
            ],
            "src": "1091:90:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1246:50:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1263:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1283:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1268:14:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:21:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1256:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1256:34:12"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1234:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1241:3:12",
                "type": ""
              }
            ],
            "src": "1187:109:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1394:118:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1404:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1416:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1427:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1412:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1404:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1478:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1502:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1487:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1440:37:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:65:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1440:65:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1366:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1378:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1389:4:12",
                "type": ""
              }
            ],
            "src": "1302:210:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1583:56:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1617:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1626:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1629:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1619:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1619:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1619:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1606:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1613:1:12",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1603:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1603:12:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1596:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1596:20:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1593:40:12"
                }
              ]
            },
            "name": "validator_revert_t_enum$_CertificationType_$1269",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1576:5:12",
                "type": ""
              }
            ],
            "src": "1518:121:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1719:109:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1729:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1751:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1738:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1738:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1729:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1816:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_CertificationType_$1269",
                      "nodeType": "YulIdentifier",
                      "src": "1767:48:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1767:55:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1767:55:12"
                }
              ]
            },
            "name": "abi_decode_t_enum$_CertificationType_$1269",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1697:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1705:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1713:5:12",
                "type": ""
              }
            ],
            "src": "1645:183:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1922:285:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1968:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1970:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1970:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1970:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1943:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1952:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1939:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1939:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1964:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1935:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1935:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1932:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2061:139:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2076:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2090:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2080:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2105:85:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2162:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2173:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2158:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2158:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2182:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_CertificationType_$1269",
                          "nodeType": "YulIdentifier",
                          "src": "2115:42:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2115:75:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2105:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_CertificationType_$1269",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1892:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1903:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1915:6:12",
                "type": ""
              }
            ],
            "src": "1834:373:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2258:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2268:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2279:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2268:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2240:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2250:7:12",
                "type": ""
              }
            ],
            "src": "2213:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2361:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2378:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2401:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2383:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2383:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2371:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2371:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2371:37:12"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2349:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2356:3:12",
                "type": ""
              }
            ],
            "src": "2296:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2518:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2528:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2540:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2551:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2536:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2536:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2528:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2608:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2621:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2632:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2617:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2617:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2564:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2564:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2490:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2502:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2513:4:12",
                "type": ""
              }
            ],
            "src": "2420:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2693:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2703:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2714:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2703:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2675:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2685:7:12",
                "type": ""
              }
            ],
            "src": "2648:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2774:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2831:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2840:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2843:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2833:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2833:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2833:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2797:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2822:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "2804:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2804:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2794:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2794:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2787:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2787:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2784:63:12"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2767:5:12",
                "type": ""
              }
            ],
            "src": "2731:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2911:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2921:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2943:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2930:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2930:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2921:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2986:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "2959:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2959:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2959:33:12"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2889:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2897:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2905:5:12",
                "type": ""
              }
            ],
            "src": "2859:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3070:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3116:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3118:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3118:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3118:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3091:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3100:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3087:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3087:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3112:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3083:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3080:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3209:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3224:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3238:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3228:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3253:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3288:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3299:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3284:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3284:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3308:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3263:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3263:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3253:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3040:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3051:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3063:6:12",
                "type": ""
              }
            ],
            "src": "3004:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3404:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3421:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3444:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3426:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3426:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3414:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3414:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3414:37:12"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3392:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3399:3:12",
                "type": ""
              }
            ],
            "src": "3339:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3561:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3571:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3583:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3594:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3579:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3579:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3571:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3651:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3664:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3675:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3660:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3660:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3607:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3607:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3607:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3533:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3545:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3556:4:12",
                "type": ""
              }
            ],
            "src": "3463:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3780:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3797:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3800:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3790:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3790:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3790:12:12"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "3691:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3903:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3920:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3923:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3913:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3913:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3913:12:12"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "3814:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3985:54:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3995:38:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4013:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4020:2:12",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4009:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4009:14:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4029:2:12",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4025:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4025:7:12"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4005:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4005:28:12"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3995:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3968:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3978:6:12",
                "type": ""
              }
            ],
            "src": "3937:102:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4073:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4090:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4093:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4083:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4083:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4083:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4187:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4190:4:12",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4180:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4180:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4180:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4211:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4214:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4204:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4204:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4204:15:12"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "4045:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4274:238:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4284:58:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4306:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "4336:4:12"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4314:21:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4314:27:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4302:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4302:40:12"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "4288:10:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4453:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4455:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4455:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4455:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4396:10:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4408:18:12",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4393:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4393:34:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "4432:10:12"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4444:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4429:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4429:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "4390:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4390:62:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4387:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4491:2:12",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "4495:10:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4484:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4484:22:12"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4260:6:12",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4268:4:12",
                "type": ""
              }
            ],
            "src": "4231:281:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4559:88:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4569:30:12",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "4579:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4579:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "4569:6:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "4628:6:12"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "4636:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "4608:19:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4608:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4608:33:12"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4543:4:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4552:6:12",
                "type": ""
              }
            ],
            "src": "4518:129:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4720:241:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4825:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "4827:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4827:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4827:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4797:6:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4805:18:12",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4794:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4794:30:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4791:56:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4857:37:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4887:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "4865:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4865:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "4857:4:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4931:23:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "4943:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4949:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4939:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4939:15:12"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "4931:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4704:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "4715:4:12",
                "type": ""
              }
            ],
            "src": "4653:308:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5018:103:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "5041:3:12"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "5046:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5051:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "5028:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5028:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5028:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "5099:3:12"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5104:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5095:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5095:16:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5113:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5088:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5088:27:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5088:27:12"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5000:3:12",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5005:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5010:6:12",
                "type": ""
              }
            ],
            "src": "4967:154:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5211:328:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5221:75:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5288:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "5246:41:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5246:49:12"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5230:15:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5230:66:12"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "5221:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "5312:5:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5319:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5305:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5305:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5305:21:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5335:27:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "5350:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5357:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5346:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5346:16:12"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "5339:3:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5400:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "5402:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5402:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5402:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "5381:3:12"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5386:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5377:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5377:16:12"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5395:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5374:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5374:25:12"
                  },
                  "nodeType": "YulIf",
                  "src": "5371:112:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "5516:3:12"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "5521:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5526:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5492:23:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5492:41:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5492:41:12"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5184:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5189:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5197:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "5205:5:12",
                "type": ""
              }
            ],
            "src": "5127:412:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5621:278:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5670:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "5672:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5672:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5672:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5649:6:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5657:4:12",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5645:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5645:17:12"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5664:3:12"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5641:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5641:27:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5634:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5634:35:12"
                  },
                  "nodeType": "YulIf",
                  "src": "5631:122:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5762:34:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5789:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5776:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5776:20:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5766:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5805:88:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5866:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5874:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5862:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5862:17:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5881:6:12"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5889:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5814:47:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:79:12"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "5805:5:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5599:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5607:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "5615:5:12",
                "type": ""
              }
            ],
            "src": "5559:340:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5963:57:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5998:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6007:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6010:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6000:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6000:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6000:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5986:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5993:2:12",
                            "type": "",
                            "value": "13"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5983:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5983:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5976:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5976:21:12"
                  },
                  "nodeType": "YulIf",
                  "src": "5973:41:12"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Activities_$1258",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5956:5:12",
                "type": ""
              }
            ],
            "src": "5905:115:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6093:102:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6103:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6125:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6112:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6112:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6103:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6183:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Activities_$1258",
                      "nodeType": "YulIdentifier",
                      "src": "6141:41:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6141:48:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6141:48:12"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Activities_$1258",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6071:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6079:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6087:5:12",
                "type": ""
              }
            ],
            "src": "6026:169:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6256:57:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6291:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6300:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6303:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6293:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6293:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6293:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6279:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6286:2:12",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6276:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6276:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6269:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6269:21:12"
                  },
                  "nodeType": "YulIf",
                  "src": "6266:41:12"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Regions_$1686",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6249:5:12",
                "type": ""
              }
            ],
            "src": "6201:112:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6383:99:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6393:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6415:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6402:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6402:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6393:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6470:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Regions_$1686",
                      "nodeType": "YulIdentifier",
                      "src": "6431:38:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6431:45:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6431:45:12"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Regions_$1686",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6361:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6369:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6377:5:12",
                "type": ""
              }
            ],
            "src": "6319:163:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6625:716:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6671:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6673:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6673:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6673:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6646:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6655:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6642:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6642:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6667:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6638:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6638:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "6635:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6764:287:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6779:45:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6810:9:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6821:1:12",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6806:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6806:17:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6793:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6793:31:12"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6783:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6871:83:12",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "6873:77:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6873:79:12"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6873:79:12"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6843:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6851:18:12",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6840:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6840:30:12"
                      },
                      "nodeType": "YulIf",
                      "src": "6837:117:12"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6968:73:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7013:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7024:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7009:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7009:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7033:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "6978:30:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6978:63:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6968:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7061:133:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7076:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7090:2:12",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7080:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7106:78:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7156:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7167:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7152:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7152:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7176:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Activities_$1258",
                          "nodeType": "YulIdentifier",
                          "src": "7116:35:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7116:68:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7106:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7204:130:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7219:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7233:2:12",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7223:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7249:75:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7296:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7307:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7292:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7292:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7316:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Regions_$1686",
                          "nodeType": "YulIdentifier",
                          "src": "7259:32:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7259:65:12"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "7249:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_enum$_Activities_$1258t_enum$_Regions_$1686",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6579:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6590:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6602:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6610:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6618:6:12",
                "type": ""
              }
            ],
            "src": "6488:853:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7423:433:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7469:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7471:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7471:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7471:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7444:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7453:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7440:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7440:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7465:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7436:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7436:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "7433:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7562:287:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7577:45:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7608:9:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7619:1:12",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7604:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7604:17:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7591:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7591:31:12"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7581:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7669:83:12",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "7671:77:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7671:79:12"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7671:79:12"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "7641:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7649:18:12",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7638:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7638:30:12"
                      },
                      "nodeType": "YulIf",
                      "src": "7635:117:12"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7766:73:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7811:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7822:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7807:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7807:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7831:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "7776:30:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7776:63:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7766:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7393:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7404:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7416:6:12",
                "type": ""
              }
            ],
            "src": "7347:509:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7907:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7917:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7932:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7939:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7928:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7928:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7917:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7889:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7899:7:12",
                "type": ""
              }
            ],
            "src": "7862:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8039:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8049:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8078:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8060:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8060:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8049:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8021:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8031:7:12",
                "type": ""
              }
            ],
            "src": "7994:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8139:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8196:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8205:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8208:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8198:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8198:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8198:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8162:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8187:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8169:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8169:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8159:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8159:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8152:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8152:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "8149:63:12"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8132:5:12",
                "type": ""
              }
            ],
            "src": "8096:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8276:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8286:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8308:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8295:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8295:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8286:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8351:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "8324:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8324:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8324:33:12"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8254:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8262:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8270:5:12",
                "type": ""
              }
            ],
            "src": "8224:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8452:391:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8498:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8500:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8500:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8500:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8473:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8482:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8469:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8469:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8494:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8465:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8465:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "8462:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8591:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8606:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8620:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8610:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8635:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8670:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8681:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8666:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8666:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8690:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "8645:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8645:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "8635:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8718:118:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8733:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8747:2:12",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8737:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8763:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8798:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8809:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8794:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8794:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8818:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8773:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8773:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "8763:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8414:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8425:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8437:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8445:6:12",
                "type": ""
              }
            ],
            "src": "8369:474:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8903:56:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8937:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8946:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8949:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8939:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8939:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8939:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8926:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8933:1:12",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8923:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8923:12:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8916:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8916:20:12"
                  },
                  "nodeType": "YulIf",
                  "src": "8913:40:12"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Colors_$1690",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8896:5:12",
                "type": ""
              }
            ],
            "src": "8849:110:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9028:98:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9038:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9060:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9047:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9047:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9038:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9114:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Colors_$1690",
                      "nodeType": "YulIdentifier",
                      "src": "9076:37:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9076:44:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9076:44:12"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Colors_$1690",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9006:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9014:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9022:5:12",
                "type": ""
              }
            ],
            "src": "8965:161:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9238:414:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9284:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9286:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9286:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9286:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9259:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9268:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9255:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9255:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9280:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9251:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9251:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "9248:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9377:129:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9392:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9406:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9396:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9421:75:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9468:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9479:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9464:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9464:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9488:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Regions_$1686",
                          "nodeType": "YulIdentifier",
                          "src": "9431:32:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9431:65:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9421:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9516:129:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9531:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9545:2:12",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9535:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9561:74:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9607:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9618:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9603:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9603:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9627:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Colors_$1690",
                          "nodeType": "YulIdentifier",
                          "src": "9571:31:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9571:64:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "9561:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Regions_$1686t_enum$_Colors_$1690",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9200:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9211:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9223:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9231:6:12",
                "type": ""
              }
            ],
            "src": "9132:520:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9806:567:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9852:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9854:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9854:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9854:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9827:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9836:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9823:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9823:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9848:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9819:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9819:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "9816:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9945:139:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9960:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9974:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9964:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9989:85:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10046:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10057:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10042:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10042:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10066:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_CertificationType_$1269",
                          "nodeType": "YulIdentifier",
                          "src": "9999:42:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9999:75:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9989:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10094:129:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10109:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10123:2:12",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10113:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10139:74:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10185:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10196:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10181:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10181:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10205:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Colors_$1690",
                          "nodeType": "YulIdentifier",
                          "src": "10149:31:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10149:64:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "10139:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10233:133:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10248:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10262:2:12",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10252:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10278:78:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10328:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10339:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10324:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10324:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10348:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Activities_$1258",
                          "nodeType": "YulIdentifier",
                          "src": "10288:35:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10288:68:12"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "10278:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_CertificationType_$1269t_enum$_Colors_$1690t_enum$_Activities_$1258",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9760:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9771:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9783:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9791:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9799:6:12",
                "type": ""
              }
            ],
            "src": "9658:715:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10445:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10491:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10493:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10493:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10493:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10466:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10475:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10462:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10462:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10487:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10458:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10458:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "10455:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10584:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10599:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10613:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10603:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10628:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10663:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10674:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10659:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10659:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10683:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10638:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10638:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10628:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10415:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10426:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10438:6:12",
                "type": ""
              }
            ],
            "src": "10379:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10829:583:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10875:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "10877:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10877:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10877:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10850:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10859:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10846:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10846:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10871:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10842:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10842:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "10839:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10968:139:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10983:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10997:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10987:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11012:85:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11069:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11080:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11065:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11065:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11089:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_CertificationType_$1269",
                          "nodeType": "YulIdentifier",
                          "src": "11022:42:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11022:75:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11012:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11117:288:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11132:46:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11163:9:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11174:2:12",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11159:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11159:18:12"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "11146:12:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11146:32:12"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11136:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11225:83:12",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "11227:77:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11227:79:12"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11227:79:12"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "11197:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11205:18:12",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11194:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11194:30:12"
                      },
                      "nodeType": "YulIf",
                      "src": "11191:117:12"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11322:73:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11367:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11378:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11363:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11363:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11387:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "11332:30:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11332:63:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "11322:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_CertificationType_$1269t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10791:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10802:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10814:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10822:6:12",
                "type": ""
              }
            ],
            "src": "10714:698:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11496:275:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11542:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11544:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11544:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11544:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11517:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11526:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11513:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11513:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11538:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11509:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11509:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "11506:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11635:129:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11650:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11664:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11654:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11679:75:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11726:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11737:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11722:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11722:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11746:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Regions_$1686",
                          "nodeType": "YulIdentifier",
                          "src": "11689:32:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11689:65:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11679:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Regions_$1686",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11466:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11477:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11489:6:12",
                "type": ""
              }
            ],
            "src": "11418:353:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11805:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11822:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11825:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11815:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11815:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11815:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11919:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11922:4:12",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11912:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11912:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11912:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11943:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11946:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11936:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11936:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11936:15:12"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "11777:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12017:62:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12051:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "12053:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12053:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12053:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12040:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12047:1:12",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "12037:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12037:12:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12030:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12030:20:12"
                  },
                  "nodeType": "YulIf",
                  "src": "12027:46:12"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Colors_$1690",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12010:5:12",
                "type": ""
              }
            ],
            "src": "11963:116:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12141:77:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12151:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12162:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12151:7:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12206:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Colors_$1690",
                      "nodeType": "YulIdentifier",
                      "src": "12168:37:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12168:44:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12168:44:12"
                }
              ]
            },
            "name": "cleanup_t_enum$_Colors_$1690",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12123:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12133:7:12",
                "type": ""
              }
            ],
            "src": "12085:133:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12293:64:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12303:48:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12345:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Colors_$1690",
                      "nodeType": "YulIdentifier",
                      "src": "12316:28:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12316:35:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12303:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Colors_$1690_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12273:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12283:9:12",
                "type": ""
              }
            ],
            "src": "12224:133:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12437:75:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12454:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12499:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Colors_$1690_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "12459:39:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12459:46:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12447:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12447:59:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12447:59:12"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Colors_$1690_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12425:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12432:3:12",
                "type": ""
              }
            ],
            "src": "12363:149:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12625:133:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12635:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12647:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12658:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12643:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12643:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12635:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12724:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12737:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12748:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12733:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12733:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Colors_$1690_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12671:52:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12671:80:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12671:80:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_Colors_$1690__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12597:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12609:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12620:4:12",
                "type": ""
              }
            ],
            "src": "12518:240:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12823:40:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12834:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12850:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12844:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12844:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12834:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12806:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12816:6:12",
                "type": ""
              }
            ],
            "src": "12764:99:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12983:34:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12993:18:12",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "13008:3:12"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "12993:11:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12955:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12960:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "12971:11:12",
                "type": ""
              }
            ],
            "src": "12869:148:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13072:258:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13082:10:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13091:1:12",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "13086:1:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13151:63:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "13176:3:12"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "13181:1:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "13172:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13172:11:12"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "13195:3:12"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "13200:1:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "13191:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13191:11:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "13185:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13185:18:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13165:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13165:39:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13165:39:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "13112:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13115:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13109:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13109:13:12"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "13123:19:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13125:15:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "13134:1:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13137:2:12",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13130:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13130:10:12"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "13125:1:12"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "13105:3:12",
                    "statements": []
                  },
                  "src": "13101:113:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13248:76:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "13298:3:12"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "13303:6:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "13294:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13294:16:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13312:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13287:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13287:27:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13287:27:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "13229:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13232:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13226:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13226:13:12"
                  },
                  "nodeType": "YulIf",
                  "src": "13223:101:12"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "13054:3:12",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "13059:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13064:6:12",
                "type": ""
              }
            ],
            "src": "13023:307:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13446:267:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13456:53:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13503:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "13470:32:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13470:39:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13460:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13518:96:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13602:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13607:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13525:76:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13525:89:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13518:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13649:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13656:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13645:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13645:16:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13663:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13668:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13623:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13623:52:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13623:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13684:23:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13695:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13700:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13691:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13691:16:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13684:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13427:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13434:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13442:3:12",
                "type": ""
              }
            ],
            "src": "13336:377:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13855:139:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13866:102:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13955:6:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13964:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13873:81:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13873:95:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13866:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13978:10:12",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "13985:3:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13978:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13834:3:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13840:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13851:3:12",
                "type": ""
              }
            ],
            "src": "13719:275:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14028:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14045:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14048:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14038:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14038:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14038:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14142:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14145:4:12",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14135:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14135:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14135:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14166:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14169:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14159:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14159:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14159:15:12"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "14000:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14237:269:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14247:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14261:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14267:1:12",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14257:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14257:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14247:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14278:38:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14308:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14314:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14304:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14304:12:12"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "14282:18:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14355:51:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14369:27:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "14383:6:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14391:4:12",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "14379:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14379:17:12"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14369:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "14335:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14328:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14328:26:12"
                  },
                  "nodeType": "YulIf",
                  "src": "14325:81:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14458:42:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "14472:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14472:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14472:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "14422:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14445:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14453:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14442:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14442:14:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14419:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14419:38:12"
                  },
                  "nodeType": "YulIf",
                  "src": "14416:84:12"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "14221:4:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14230:6:12",
                "type": ""
              }
            ],
            "src": "14186:320:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14577:62:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14611:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "14613:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14613:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14613:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14600:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14607:1:12",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14597:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14597:12:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14590:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14590:20:12"
                  },
                  "nodeType": "YulIf",
                  "src": "14587:46:12"
                }
              ]
            },
            "name": "validator_assert_t_enum$_CertificationType_$1269",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14570:5:12",
                "type": ""
              }
            ],
            "src": "14512:127:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14712:88:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14722:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14733:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14722:7:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14788:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_CertificationType_$1269",
                      "nodeType": "YulIdentifier",
                      "src": "14739:48:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14739:55:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14739:55:12"
                }
              ]
            },
            "name": "cleanup_t_enum$_CertificationType_$1269",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14694:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14704:7:12",
                "type": ""
              }
            ],
            "src": "14645:155:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14886:75:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14896:59:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14949:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_CertificationType_$1269",
                      "nodeType": "YulIdentifier",
                      "src": "14909:39:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14909:46:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "14896:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_CertificationType_$1269_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14866:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "14876:9:12",
                "type": ""
              }
            ],
            "src": "14806:155:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15010:53:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15020:36:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15045:3:12",
                        "type": "",
                        "value": "248"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15050:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "15041:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15041:15:12"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "15020:8:12"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_248",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14991:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "15001:8:12",
                "type": ""
              }
            ],
            "src": "14967:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15114:48:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15124:32:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15150:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_248",
                      "nodeType": "YulIdentifier",
                      "src": "15135:14:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15135:21:12"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "15124:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15096:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "15106:7:12",
                "type": ""
              }
            ],
            "src": "15069:93:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15271:105:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15288:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15362:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_enum$_CertificationType_$1269_to_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "15311:50:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15311:57:12"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "15293:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15293:76:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15281:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15281:89:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15281:89:12"
                }
              ]
            },
            "name": "abi_encode_t_enum$_CertificationType_$1269_to_t_uint8_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15259:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15266:3:12",
                "type": ""
              }
            ],
            "src": "15168:208:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15474:94:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15491:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15554:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_enum$_Colors_$1690_to_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "15514:39:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15514:46:12"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "15496:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15496:65:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15484:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15484:78:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15484:78:12"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Colors_$1690_to_t_uint8_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15462:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15469:3:12",
                "type": ""
              }
            ],
            "src": "15382:186:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15632:63:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15667:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "15669:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15669:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15669:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15655:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15662:2:12",
                            "type": "",
                            "value": "13"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15652:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15652:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15645:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15645:21:12"
                  },
                  "nodeType": "YulIf",
                  "src": "15642:47:12"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Activities_$1258",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15625:5:12",
                "type": ""
              }
            ],
            "src": "15574:121:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15761:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15771:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "15782:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15771:7:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15830:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Activities_$1258",
                      "nodeType": "YulIdentifier",
                      "src": "15788:41:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15788:48:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15788:48:12"
                }
              ]
            },
            "name": "cleanup_t_enum$_Activities_$1258",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15743:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15753:7:12",
                "type": ""
              }
            ],
            "src": "15701:141:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15921:68:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15931:52:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15977:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Activities_$1258",
                      "nodeType": "YulIdentifier",
                      "src": "15944:32:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15944:39:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "15931:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Activities_$1258_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15901:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "15911:9:12",
                "type": ""
              }
            ],
            "src": "15848:141:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16091:98:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16108:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16175:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_enum$_Activities_$1258_to_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "16131:43:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16131:50:12"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "16113:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16113:69:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16101:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16101:82:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16101:82:12"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Activities_$1258_to_t_uint8_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16079:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16086:3:12",
                "type": ""
              }
            ],
            "src": "15995:194:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16409:405:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16502:6:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16511:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_CertificationType_$1269_to_t_uint8_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16420:81:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16420:95:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16420:95:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16524:18:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16535:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16540:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16531:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16531:11:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16524:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16623:6:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16632:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Colors_$1690_to_t_uint8_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16552:70:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16552:84:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16552:84:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16645:18:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16656:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16661:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16652:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16652:11:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16645:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16748:6:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16757:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Activities_$1258_to_t_uint8_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16673:74:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16673:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16673:88:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16770:18:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16781:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16786:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16777:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16777:11:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16770:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16798:10:12",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "16805:3:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16798:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_enum$_CertificationType_$1269_t_enum$_Colors_$1690_t_enum$_Activities_$1258__to_t_uint8_t_uint8_t_uint8__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16372:3:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16378:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16386:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16394:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16405:3:12",
                "type": ""
              }
            ],
            "src": "16195:619:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16916:73:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16933:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16938:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16926:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16926:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16926:19:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16954:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16973:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16978:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16969:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16969:14:12"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "16954:11:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16888:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "16893:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "16904:11:12",
                "type": ""
              }
            ],
            "src": "16820:169:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17101:128:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17123:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17131:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17119:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17119:14:12"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17135:34:12",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17112:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17112:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17112:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17191:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17199:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17187:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17187:15:12"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17204:17:12",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17180:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17180:42:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17180:42:12"
                }
              ]
            },
            "name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17093:6:12",
                "type": ""
              }
            ],
            "src": "16995:234:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17381:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17391:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17457:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17462:2:12",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17398:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17398:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17391:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17563:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
                      "nodeType": "YulIdentifier",
                      "src": "17474:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17474:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17474:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17576:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17587:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17592:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17583:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17583:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17576:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17369:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17377:3:12",
                "type": ""
              }
            ],
            "src": "17235:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17778:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17788:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17800:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17811:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17796:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17796:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17788:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17835:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17846:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17831:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17831:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17854:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17860:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17850:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17850:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17824:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17824:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17824:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17880:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18014:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17888:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17888:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17880:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17758:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17773:4:12",
                "type": ""
              }
            ],
            "src": "17607:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18060:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18077:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18080:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18070:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18070:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18070:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18174:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18177:4:12",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18167:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18167:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18167:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18198:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18201:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18191:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18191:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18191:15:12"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "18032:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18262:261:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18272:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18295:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18277:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18277:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18272:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18306:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18329:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18311:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18311:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18306:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18469:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18471:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18471:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18471:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18390:1:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18397:66:12",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18465:1:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18393:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18393:74:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "18387:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18387:81:12"
                  },
                  "nodeType": "YulIf",
                  "src": "18384:107:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18501:16:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18512:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18515:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18508:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18508:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "18501:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18249:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18252:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "18258:3:12",
                "type": ""
              }
            ],
            "src": "18218:305:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18635:67:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18657:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18665:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18653:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18653:14:12"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18669:25:12",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18646:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18646:49:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18646:49:12"
                }
              ]
            },
            "name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18627:6:12",
                "type": ""
              }
            ],
            "src": "18529:173:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18872:238:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18882:92:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18966:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18971:2:12",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18889:76:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18889:85:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18882:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19072:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
                      "nodeType": "YulIdentifier",
                      "src": "18983:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18983:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18983:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19085:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19096:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19101:2:12",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19092:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19092:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19085:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18860:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18868:3:12",
                "type": ""
              }
            ],
            "src": "18708:402:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19222:61:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19244:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19252:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19240:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19240:14:12"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19256:19:12",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19233:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19233:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19233:43:12"
                }
              ]
            },
            "name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19214:6:12",
                "type": ""
              }
            ],
            "src": "19116:167:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19453:238:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19463:92:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19547:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19552:2:12",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19470:76:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19470:85:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19463:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19653:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
                      "nodeType": "YulIdentifier",
                      "src": "19564:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19564:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19564:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19666:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19677:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19682:2:12",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19673:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19673:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19666:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19441:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19449:3:12",
                "type": ""
              }
            ],
            "src": "19289:402:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20083:581:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20094:155:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20245:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20101:142:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20101:148:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20094:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20259:102:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20348:6:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20357:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20266:81:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20266:95:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20259:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20371:155:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20522:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20378:142:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20378:148:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20371:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20536:102:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20625:6:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20634:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20543:81:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20543:95:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20536:3:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20648:10:12",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "20655:3:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20648:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20054:3:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20060:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20068:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20079:3:12",
                "type": ""
              }
            ],
            "src": "19697:967:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20762:272:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20772:53:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20819:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "20786:32:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20786:39:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "20776:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20834:78:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20900:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20905:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20841:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20841:71:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20834:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20947:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20954:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20943:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20943:16:12"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20961:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20966:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20921:21:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20921:52:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20921:52:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20982:46:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20993:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "21020:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "20998:21:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20998:29:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20989:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20989:39:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20982:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20743:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20750:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20758:3:12",
                "type": ""
              }
            ],
            "src": "20670:364:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21158:195:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21168:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21180:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21191:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21176:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21176:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21168:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21215:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21226:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21211:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21211:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21234:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21240:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21230:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21230:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21204:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21204:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21204:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21260:86:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21332:6:12"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21341:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21268:63:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21268:78:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21260:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21130:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21142:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21153:4:12",
                "type": ""
              }
            ],
            "src": "21040:313:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21407:300:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21417:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21440:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21422:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21422:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "21417:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21451:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21474:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21456:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21456:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "21451:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "21649:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "21651:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21651:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "21651:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21561:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "21554:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21554:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "21547:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21547:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "21569:1:12"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21576:66:12",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21644:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "21572:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21572:74:12"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "21566:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21566:81:12"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "21543:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21543:105:12"
                  },
                  "nodeType": "YulIf",
                  "src": "21540:131:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21681:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "21696:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "21699:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "21692:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21692:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "21681:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "21390:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "21393:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "21399:7:12",
                "type": ""
              }
            ],
            "src": "21359:348:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21741:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21758:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21761:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21751:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21751:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21751:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21855:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21858:4:12",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21848:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21848:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21848:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21879:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21882:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "21872:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21872:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21872:15:12"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "21713:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21942:128:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21952:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "21979:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "21961:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21961:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "21952:5:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22013:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "22015:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22015:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22015:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22000:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22007:4:12",
                        "type": "",
                        "value": "0x00"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "21997:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21997:15:12"
                  },
                  "nodeType": "YulIf",
                  "src": "21994:41:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22044:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "22055:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22062:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "22051:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22051:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "22044:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "21928:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "21938:3:12",
                "type": ""
              }
            ],
            "src": "21899:171:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22182:76:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22204:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22212:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22200:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22200:14:12"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22216:34:12",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22193:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22193:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22193:58:12"
                }
              ]
            },
            "name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22174:6:12",
                "type": ""
              }
            ],
            "src": "22076:182:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22410:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22420:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22486:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22491:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22427:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22427:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22420:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22592:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                      "nodeType": "YulIdentifier",
                      "src": "22503:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22503:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22503:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22605:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22616:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22621:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22612:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22612:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22605:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22398:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22406:3:12",
                "type": ""
              }
            ],
            "src": "22264:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22807:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22817:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22829:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22840:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22825:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22825:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22817:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22864:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22875:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22860:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22860:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22883:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22889:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22879:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22879:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22853:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22853:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22853:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22909:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "23043:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22917:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22917:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22909:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22787:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22802:4:12",
                "type": ""
              }
            ],
            "src": "22636:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23106:146:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23116:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23139:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23121:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23121:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "23116:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23150:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23173:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23155:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23155:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "23150:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23197:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "23199:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23199:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23199:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23191:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23194:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "23188:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23188:8:12"
                  },
                  "nodeType": "YulIf",
                  "src": "23185:34:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23229:17:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23241:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23244:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "23237:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23237:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "23229:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "23092:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "23095:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "23101:4:12",
                "type": ""
              }
            ],
            "src": "23061:191:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23286:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23303:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23306:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23296:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23296:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23296:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23400:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23403:4:12",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23393:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23393:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23393:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23424:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23427:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "23417:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23417:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23417:15:12"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "23258:180:12"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_enum$_CertificationType_$1269(value) {\n        if iszero(lt(value, 7)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_CertificationType_$1269(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_CertificationType_$1269(value)\n    }\n\n    function abi_decode_tuple_t_enum$_CertificationType_$1269(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_CertificationType_$1269(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_enum$_Activities_$1258(value) {\n        if iszero(lt(value, 13)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Activities_$1258(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Activities_$1258(value)\n    }\n\n    function validator_revert_t_enum$_Regions_$1686(value) {\n        if iszero(lt(value, 20)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Regions_$1686(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Regions_$1686(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_enum$_Activities_$1258t_enum$_Regions_$1686(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Activities_$1258(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_enum$_Regions_$1686(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_enum$_Colors_$1690(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Colors_$1690(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Colors_$1690(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Regions_$1686t_enum$_Colors_$1690(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Regions_$1686(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Colors_$1690(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_CertificationType_$1269t_enum$_Colors_$1690t_enum$_Activities_$1258(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_CertificationType_$1269(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Colors_$1690(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_enum$_Activities_$1258(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_CertificationType_$1269t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_CertificationType_$1269(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Regions_$1686(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Regions_$1686(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Colors_$1690(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Colors_$1690(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Colors_$1690(value)\n    }\n\n    function convert_t_enum$_Colors_$1690_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Colors_$1690(value)\n    }\n\n    function abi_encode_t_enum$_Colors_$1690_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Colors_$1690_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Colors_$1690__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Colors_$1690_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function validator_assert_t_enum$_CertificationType_$1269(value) {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_CertificationType_$1269(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_CertificationType_$1269(value)\n    }\n\n    function convert_t_enum$_CertificationType_$1269_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_CertificationType_$1269(value)\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function abi_encode_t_enum$_CertificationType_$1269_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(convert_t_enum$_CertificationType_$1269_to_t_uint8(value)))\n    }\n\n    function abi_encode_t_enum$_Colors_$1690_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(convert_t_enum$_Colors_$1690_to_t_uint8(value)))\n    }\n\n    function validator_assert_t_enum$_Activities_$1258(value) {\n        if iszero(lt(value, 13)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Activities_$1258(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Activities_$1258(value)\n    }\n\n    function convert_t_enum$_Activities_$1258_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Activities_$1258(value)\n    }\n\n    function abi_encode_t_enum$_Activities_$1258_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(convert_t_enum$_Activities_$1258_to_t_uint8(value)))\n    }\n\n    function abi_encode_tuple_packed_t_enum$_CertificationType_$1269_t_enum$_Colors_$1690_t_enum$_Activities_$1258__to_t_uint8_t_uint8_t_uint8__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_enum$_CertificationType_$1269_to_t_uint8_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 1)\n\n        abi_encode_t_enum$_Colors_$1690_to_t_uint8_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 1)\n\n        abi_encode_t_enum$_Activities_$1258_to_t_uint8_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 1)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "592:5870:9:-:0;;;;;;;;;;;;;432:34:11;289:23;455:10;432;;;:34;;:::i;:::-;545:6:8;506:9;:36;516:25;506:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;;;;607:6;561:9;:43;571:32;561:43;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:52;;;;663:8;623:9;:37;633:26;623:37;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:48;;;;721:8;681:9;:37;691:26;681:37;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:48;;;;779:8;739:9;:37;749:26;739:37;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:48;;;;836:8;797:9;:36;807:25;797:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:47;;;;891:8;854:9;:34;864:23;854:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;;;;632:12:10;606:6;:23;613:15;606:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;683:12;654:6;:26;661:18;654:26;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;732:12;705:6;:24;712:16;705:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;781:12;754:6;:24;761:16;754:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;836:12;803:6;:30;810:22;803:30;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;898:12;858:6;:37;865:29;858:37;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;944:12;920:6;:21;927:13;920:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;992:12;966:6;:23;973:15;966:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1042:12;1014:6;:25;1021:17;1014:25;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1089:12;1064:6;:22;1071:14;1064:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1136:12;1111:6;:22;1118:14;1111:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1185:12;1158:6;:24;1165:16;1158:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1232:12;1207:6;:22;1214:14;1207:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1281:12;1254:6;:24;1261:16;1254:24;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1329:12;1303:6;:23;1310:15;1303:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1377:12;1351:6;:23;1358:15;1351:23;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1437:12;1399:6;:35;1406:27;1399:35;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1484:12;1459:6;:22;1466:14;1459:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1537:12;1506:6;:28;1513:20;1506:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1584:12;1559:6;:22;1566:14;1559:22;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;592:5870:9;;6218:110:0;6296:25;6307:4;6313:7;6296:10;;;:25;;:::i;:::-;6218:110;;:::o;6822:233::-;6905:22;6913:4;6919:7;6905;;;:22;;:::i;:::-;6900:149;;6975:4;6943:6;:12;6950:4;6943:12;;;;;;;;;;;:20;;:29;6964:7;6943:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7025:12;:10;;;:12;;:::i;:::-;6998:40;;7016:7;6998:40;;7010:4;6998:40;;;;;;;;;;6900:149;6822:233;;:::o;2894:137::-;2972:4;2995:6;:12;3002:4;2995:12;;;;;;;;;;;:20;;:29;3016:7;2995:29;;;;;;;;;;;;;;;;;;;;;;;;;2988:36;;2894:137;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:180:12:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;592:5870:9;;;;;;;",
  "deployedSourceMap": "592:5870:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2605:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;423:52:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3977:121:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5829:630:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2402:268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4348:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5365:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2852:115:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4317:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;784:226:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1320:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;252:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4982:371:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1155:659;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2894:137:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2012:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2021:204:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4727:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;534:41:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;316:90:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2605:202:0;2690:4;2728:32;2713:47;;;:11;:47;;;;:87;;;;2764:36;2788:11;2764:23;:36::i;:::-;2713:87;2706:94;;2605:202;;;:::o;423:52:8:-;;;;;;;;;;;;;;;;;:::o;3977:121:0:-;4043:7;4069:6;:12;4076:4;4069:12;;;;;;;;;;;:22;;;4062:29;;3977:121;;;:::o;5829:630:9:-;5924:4;5936:26;5965:12;5978:6;5965:20;;;;;;:::i;:::-;;;;;;;;;;;;;5936:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6063:17;6073:6;6063:9;:17::i;:::-;:42;;;;6084:9;:21;;;6063:42;6059:75;;;6122:5;6115:12;;;;;6059:75;6144:19;6166:6;:14;6173:6;6166:14;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6144:36;;6186:16;6205:57;;;;;;;;6210:9;:27;;;6205:57;;;;;;;;:::i;:::-;;;;;;6239:12;6205:57;;;;;;;;:::i;:::-;;;;;;6253:8;6205:57;;;;;;;;:::i;:::-;;;;;6186:76;;6268:11;6310:4;:22;;;6334:4;:10;;;6346:4;:13;;;6293:67;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6282:80;;;;;;6268:94;;6378:38;6401:9;6412:3;6378:22;:38::i;:::-;6373:80;;;6426:4;6419:11;;;;;;;;6373:80;6448:5;6441:12;;;;;;5829:630;;;;;;:::o;2402:268::-;368:38:11;2490:30:0;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;2661:4:9::1;2626:12;2639:6;2626:20;;;;;;:::i;:::-;;;;;;;;;;;;;:32;;;:39;;;;;;;;;;;;;;;;;;2402:268:::0;;:::o;4348:145:0:-;4431:18;4444:4;4431:12;:18::i;:::-;2490:30;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;4461:25:::1;4472:4;4478:7;4461:10;:25::i;:::-;4348:145:::0;;;:::o;5365:214::-;5471:12;:10;:12::i;:::-;5460:23;;:7;:23;;;5452:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5546:26;5558:4;5564:7;5546:11;:26::i;:::-;5365:214;;:::o;2852:115:9:-;289:23:11;2490:30:0;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;2957:5:9::1;2940:6;:14;2947:6;2940:14;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2852:115:::0;;;:::o;4317:350::-;289:23:11;2490:30:0;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;4440:16:9::1;4459:40;;;;;;;;4464:17;4459:40;;;;;;;;:::i;:::-;;;;;;4483:5;4459:40;;;;;;;;:::i;:::-;;;;;;4490:8;4459:40;;;;;;;;:::i;:::-;;;;::::0;4440:59:::1;;4505:11;4547:4;:22;;;4571:4;:10;;;4583:4;:13;;;4530:67;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4519:80;;;;;;4505:94;;4619:4;4605:6;:11;4612:3;4605:11;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4629:33;4647:9;4658:3;4629:17;:33::i;:::-;;4434:233;;4317:350:::0;;;;:::o;784:226:11:-;289:23;2490:30:0;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;964:41:11::1;368:38;1002:2;964:10;:41::i;:::-;784:226:::0;;:::o;1320:229::-;289:23;2490:30:0;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;1502:42:11::1;368:38;1541:2;1502:11;:42::i;:::-;1320:229:::0;;:::o;252:60::-;289:23;252:60;:::o;4982:371:9:-;289:23:11;2490:30:0;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;5108:16:9::1;5127:40;;;;;;;;5132:17;5127:40;;;;;;;;:::i;:::-;;;;;;5151:5;5127:40;;;;;;;;:::i;:::-;;;;;;5158:8;5127:40;;;;;;;;:::i;:::-;;;;::::0;5108:59:::1;;5173:11;5215:4;:22;;;5239:4;:10;;;5251:4;:13;;;5198:67;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5187:80;;;;;;5173:94;;5277:36;5298:9;5309:3;5277:20;:36::i;:::-;5273:76;;;5331:6;:11;5338:3;5331:11;;;;;;;;;;;;5324:18:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5273:76;5102:251;;4982:371:::0;;;;:::o;1155:659::-;368:38:11;2490:30:0;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;1413:28:9::1;1444:325;;;;;;;;1463:6;1444:325;;;;1511:10;1444:325;;;;;;1560:17;1444:325;;;;;;;;:::i;:::-;;;;;;1619:15;1444:325;;;;1669:9;:28;1679:17;1669:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1444:325;;;;1719:5;1444:325;;;;::::0;1413:356:::1;;1798:11;1775:12;1788:6;1775:20;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1284:530;1155:659:::0;;;:::o;2894:137:0:-;2972:4;2995:6;:12;3002:4;2995:12;;;;;;;;;;;:20;;:29;3016:7;2995:29;;;;;;;;;;;;;;;;;;;;;;;;;2988:36;;2894:137;;;;:::o;2012:49::-;2057:4;2012:49;;;:::o;2021:204:9:-;2083:4;2095:28;2126:12;2139:6;2126:20;;;;;;:::i;:::-;;;;;;;;;;;;;2095:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:11;:20;;;2177:11;:20;;;:43;;;;:::i;:::-;2159:15;:61;2152:68;;;2021:204;;;:::o;4727:147:0:-;4811:18;4824:4;4811:12;:18::i;:::-;2490:30;2501:4;2507:12;:10;:12::i;:::-;2490:10;:30::i;:::-;4841:26:::1;4853:4;4859:7;4841:11;:26::i;:::-;4727:147:::0;;;:::o;534:41:10:-;;;;;;;;;;;;;;;;;;;;;;:::o;316:90:11:-;368:38;316:90;:::o;829:155:4:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;5903:138:6:-;5983:4;6006:28;6016:3;:10;;6028:5;6006:9;:28::i;:::-;5999:35;;5903:138;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;3312:484:0:-;3392:22;3400:4;3406:7;3392;:22::i;:::-;3387:403;;3575:41;3603:7;3575:41;;3613:2;3575:19;:41::i;:::-;3687:38;3715:4;3707:13;;3722:2;3687:19;:38::i;:::-;3482:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3430:349;;;;;;;;;;;:::i;:::-;;;;;;;;3387:403;3312:484;;:::o;6822:233::-;6905:22;6913:4;6919:7;6905;:22::i;:::-;6900:149;;6975:4;6943:6;:12;6950:4;6943:12;;;;;;;;;;;:20;;:29;6964:7;6943:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7025:12;:10;:12::i;:::-;6998:40;;7016:7;6998:40;;7010:4;6998:40;;;;;;;;;;6900:149;6822:233;;:::o;7180:234::-;7263:22;7271:4;7277:7;7263;:22::i;:::-;7259:149;;;7333:5;7301:6;:12;7308:4;7301:12;;;;;;;;;;;:20;;:29;7322:7;7301:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7384:12;:10;:12::i;:::-;7357:40;;7375:7;7357:40;;7369:4;7357:40;;;;;;;;;;7259:149;7180:234;;:::o;5402:123:6:-;5472:4;5495:23;5500:3;:10;;5512:5;5495:4;:23::i;:::-;5488:30;;5402:123;;;;:::o;5693:129::-;5766:4;5789:26;5797:3;:10;;5809:5;5789:7;:26::i;:::-;5782:33;;5693:129;;;;:::o;3738:127::-;3811:4;3857:1;3834:3;:12;;:19;3847:5;3834:19;;;;;;;;;;;;:24;;3827:31;;3738:127;;;;:::o;1588:441:3:-;1663:13;1688:19;1733:1;1724:6;1720:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:47;;1745:15;:6;1752:1;1745:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1770;:6;1777:1;1770:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1800:9;1825:1;1816:6;1812:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;1866:12;1887:3;1879:5;:11;1866:25;;;;;;;:::i;:::-;;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1915:1;1905:11;;;;;1835:3;;;;:::i;:::-;;;1795:132;;;;1953:1;1944:5;:10;1936:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2015:6;2001:21;;;1588:441;;;;:::o;1697:404:6:-;1760:4;1781:21;1791:3;1796:5;1781:9;:21::i;:::-;1776:319;;1818:3;:11;;1835:5;1818:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:3;:11;;:18;;;;1976:3;:12;;:19;1989:5;1976:19;;;;;;;;;;;:40;;;;2037:4;2030:11;;;;1776:319;2079:5;2072:12;;1697:404;;;;;:::o;2269:1388::-;2335:4;2451:18;2472:3;:12;;:19;2485:5;2472:19;;;;;;;;;;;;2451:40;;2520:1;2506:10;:15;2502:1149;;2875:21;2912:1;2899:10;:14;;;;:::i;:::-;2875:38;;2927:17;2968:1;2947:3;:11;;:18;;;;:22;;;;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;;;:::i;:::-;;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3314:10;3288:3;:12;;:23;3301:9;3288:23;;;;;;;;;;;:36;;;;3016:366;2984:398;3460:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;2269:1388;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:121::-;1613:1;1606:5;1603:12;1593:40;;1629:1;1626;1619:12;1593:40;1518:121;:::o;1645:183::-;1713:5;1751:6;1738:20;1729:29;;1767:55;1816:5;1767:55;:::i;:::-;1645:183;;;;:::o;1834:373::-;1915:6;1964:2;1952:9;1943:7;1939:23;1935:32;1932:119;;;1970:79;;:::i;:::-;1932:119;2090:1;2115:75;2182:7;2173:6;2162:9;2158:22;2115:75;:::i;:::-;2105:85;;2061:139;1834:373;;;;:::o;2213:77::-;2250:7;2279:5;2268:16;;2213:77;;;:::o;2296:118::-;2383:24;2401:5;2383:24;:::i;:::-;2378:3;2371:37;2296:118;;:::o;2420:222::-;2513:4;2551:2;2540:9;2536:18;2528:26;;2564:71;2632:1;2621:9;2617:17;2608:6;2564:71;:::i;:::-;2420:222;;;;:::o;2648:77::-;2685:7;2714:5;2703:16;;2648:77;;;:::o;2731:122::-;2804:24;2822:5;2804:24;:::i;:::-;2797:5;2794:35;2784:63;;2843:1;2840;2833:12;2784:63;2731:122;:::o;2859:139::-;2905:5;2943:6;2930:20;2921:29;;2959:33;2986:5;2959:33;:::i;:::-;2859:139;;;;:::o;3004:329::-;3063:6;3112:2;3100:9;3091:7;3087:23;3083:32;3080:119;;;3118:79;;:::i;:::-;3080:119;3238:1;3263:53;3308:7;3299:6;3288:9;3284:22;3263:53;:::i;:::-;3253:63;;3209:117;3004:329;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:117::-;3800:1;3797;3790:12;3814:117;3923:1;3920;3913:12;3937:102;3978:6;4029:2;4025:7;4020:2;4013:5;4009:14;4005:28;3995:38;;3937:102;;;:::o;4045:180::-;4093:77;4090:1;4083:88;4190:4;4187:1;4180:15;4214:4;4211:1;4204:15;4231:281;4314:27;4336:4;4314:27;:::i;:::-;4306:6;4302:40;4444:6;4432:10;4429:22;4408:18;4396:10;4393:34;4390:62;4387:88;;;4455:18;;:::i;:::-;4387:88;4495:10;4491:2;4484:22;4274:238;4231:281;;:::o;4518:129::-;4552:6;4579:20;;:::i;:::-;4569:30;;4608:33;4636:4;4628:6;4608:33;:::i;:::-;4518:129;;;:::o;4653:308::-;4715:4;4805:18;4797:6;4794:30;4791:56;;;4827:18;;:::i;:::-;4791:56;4865:29;4887:6;4865:29;:::i;:::-;4857:37;;4949:4;4943;4939:15;4931:23;;4653:308;;;:::o;4967:154::-;5051:6;5046:3;5041;5028:30;5113:1;5104:6;5099:3;5095:16;5088:27;4967:154;;;:::o;5127:412::-;5205:5;5230:66;5246:49;5288:6;5246:49;:::i;:::-;5230:66;:::i;:::-;5221:75;;5319:6;5312:5;5305:21;5357:4;5350:5;5346:16;5395:3;5386:6;5381:3;5377:16;5374:25;5371:112;;;5402:79;;:::i;:::-;5371:112;5492:41;5526:6;5521:3;5516;5492:41;:::i;:::-;5211:328;5127:412;;;;;:::o;5559:340::-;5615:5;5664:3;5657:4;5649:6;5645:17;5641:27;5631:122;;5672:79;;:::i;:::-;5631:122;5789:6;5776:20;5814:79;5889:3;5881:6;5874:4;5866:6;5862:17;5814:79;:::i;:::-;5805:88;;5621:278;5559:340;;;;:::o;5905:115::-;5993:2;5986:5;5983:13;5973:41;;6010:1;6007;6000:12;5973:41;5905:115;:::o;6026:169::-;6087:5;6125:6;6112:20;6103:29;;6141:48;6183:5;6141:48;:::i;:::-;6026:169;;;;:::o;6201:112::-;6286:2;6279:5;6276:13;6266:41;;6303:1;6300;6293:12;6266:41;6201:112;:::o;6319:163::-;6377:5;6415:6;6402:20;6393:29;;6431:45;6470:5;6431:45;:::i;:::-;6319:163;;;;:::o;6488:853::-;6602:6;6610;6618;6667:2;6655:9;6646:7;6642:23;6638:32;6635:119;;;6673:79;;:::i;:::-;6635:119;6821:1;6810:9;6806:17;6793:31;6851:18;6843:6;6840:30;6837:117;;;6873:79;;:::i;:::-;6837:117;6978:63;7033:7;7024:6;7013:9;7009:22;6978:63;:::i;:::-;6968:73;;6764:287;7090:2;7116:68;7176:7;7167:6;7156:9;7152:22;7116:68;:::i;:::-;7106:78;;7061:133;7233:2;7259:65;7316:7;7307:6;7296:9;7292:22;7259:65;:::i;:::-;7249:75;;7204:130;6488:853;;;;;:::o;7347:509::-;7416:6;7465:2;7453:9;7444:7;7440:23;7436:32;7433:119;;;7471:79;;:::i;:::-;7433:119;7619:1;7608:9;7604:17;7591:31;7649:18;7641:6;7638:30;7635:117;;;7671:79;;:::i;:::-;7635:117;7776:63;7831:7;7822:6;7811:9;7807:22;7776:63;:::i;:::-;7766:73;;7562:287;7347:509;;;;:::o;7862:126::-;7899:7;7939:42;7932:5;7928:54;7917:65;;7862:126;;;:::o;7994:96::-;8031:7;8060:24;8078:5;8060:24;:::i;:::-;8049:35;;7994:96;;;:::o;8096:122::-;8169:24;8187:5;8169:24;:::i;:::-;8162:5;8159:35;8149:63;;8208:1;8205;8198:12;8149:63;8096:122;:::o;8224:139::-;8270:5;8308:6;8295:20;8286:29;;8324:33;8351:5;8324:33;:::i;:::-;8224:139;;;;:::o;8369:474::-;8437:6;8445;8494:2;8482:9;8473:7;8469:23;8465:32;8462:119;;;8500:79;;:::i;:::-;8462:119;8620:1;8645:53;8690:7;8681:6;8670:9;8666:22;8645:53;:::i;:::-;8635:63;;8591:117;8747:2;8773:53;8818:7;8809:6;8798:9;8794:22;8773:53;:::i;:::-;8763:63;;8718:118;8369:474;;;;;:::o;8849:110::-;8933:1;8926:5;8923:12;8913:40;;8949:1;8946;8939:12;8913:40;8849:110;:::o;8965:161::-;9022:5;9060:6;9047:20;9038:29;;9076:44;9114:5;9076:44;:::i;:::-;8965:161;;;;:::o;9132:520::-;9223:6;9231;9280:2;9268:9;9259:7;9255:23;9251:32;9248:119;;;9286:79;;:::i;:::-;9248:119;9406:1;9431:65;9488:7;9479:6;9468:9;9464:22;9431:65;:::i;:::-;9421:75;;9377:129;9545:2;9571:64;9627:7;9618:6;9607:9;9603:22;9571:64;:::i;:::-;9561:74;;9516:129;9132:520;;;;;:::o;9658:715::-;9783:6;9791;9799;9848:2;9836:9;9827:7;9823:23;9819:32;9816:119;;;9854:79;;:::i;:::-;9816:119;9974:1;9999:75;10066:7;10057:6;10046:9;10042:22;9999:75;:::i;:::-;9989:85;;9945:139;10123:2;10149:64;10205:7;10196:6;10185:9;10181:22;10149:64;:::i;:::-;10139:74;;10094:129;10262:2;10288:68;10348:7;10339:6;10328:9;10324:22;10288:68;:::i;:::-;10278:78;;10233:133;9658:715;;;;;:::o;10379:329::-;10438:6;10487:2;10475:9;10466:7;10462:23;10458:32;10455:119;;;10493:79;;:::i;:::-;10455:119;10613:1;10638:53;10683:7;10674:6;10663:9;10659:22;10638:53;:::i;:::-;10628:63;;10584:117;10379:329;;;;:::o;10714:698::-;10814:6;10822;10871:2;10859:9;10850:7;10846:23;10842:32;10839:119;;;10877:79;;:::i;:::-;10839:119;10997:1;11022:75;11089:7;11080:6;11069:9;11065:22;11022:75;:::i;:::-;11012:85;;10968:139;11174:2;11163:9;11159:18;11146:32;11205:18;11197:6;11194:30;11191:117;;;11227:79;;:::i;:::-;11191:117;11332:63;11387:7;11378:6;11367:9;11363:22;11332:63;:::i;:::-;11322:73;;11117:288;10714:698;;;;;:::o;11418:353::-;11489:6;11538:2;11526:9;11517:7;11513:23;11509:32;11506:119;;;11544:79;;:::i;:::-;11506:119;11664:1;11689:65;11746:7;11737:6;11726:9;11722:22;11689:65;:::i;:::-;11679:75;;11635:129;11418:353;;;;:::o;11777:180::-;11825:77;11822:1;11815:88;11922:4;11919:1;11912:15;11946:4;11943:1;11936:15;11963:116;12047:1;12040:5;12037:12;12027:46;;12053:18;;:::i;:::-;12027:46;11963:116;:::o;12085:133::-;12133:7;12162:5;12151:16;;12168:44;12206:5;12168:44;:::i;:::-;12085:133;;;:::o;12224:::-;12283:9;12316:35;12345:5;12316:35;:::i;:::-;12303:48;;12224:133;;;:::o;12363:149::-;12459:46;12499:5;12459:46;:::i;:::-;12454:3;12447:59;12363:149;;:::o;12518:240::-;12620:4;12658:2;12647:9;12643:18;12635:26;;12671:80;12748:1;12737:9;12733:17;12724:6;12671:80;:::i;:::-;12518:240;;;;:::o;12764:99::-;12816:6;12850:5;12844:12;12834:22;;12764:99;;;:::o;12869:148::-;12971:11;13008:3;12993:18;;12869:148;;;;:::o;13023:307::-;13091:1;13101:113;13115:6;13112:1;13109:13;13101:113;;;13200:1;13195:3;13191:11;13185:18;13181:1;13176:3;13172:11;13165:39;13137:2;13134:1;13130:10;13125:15;;13101:113;;;13232:6;13229:1;13226:13;13223:101;;;13312:1;13303:6;13298:3;13294:16;13287:27;13223:101;13072:258;13023:307;;;:::o;13336:377::-;13442:3;13470:39;13503:5;13470:39;:::i;:::-;13525:89;13607:6;13602:3;13525:89;:::i;:::-;13518:96;;13623:52;13668:6;13663:3;13656:4;13649:5;13645:16;13623:52;:::i;:::-;13700:6;13695:3;13691:16;13684:23;;13446:267;13336:377;;;;:::o;13719:275::-;13851:3;13873:95;13964:3;13955:6;13873:95;:::i;:::-;13866:102;;13985:3;13978:10;;13719:275;;;;:::o;14000:180::-;14048:77;14045:1;14038:88;14145:4;14142:1;14135:15;14169:4;14166:1;14159:15;14186:320;14230:6;14267:1;14261:4;14257:12;14247:22;;14314:1;14308:4;14304:12;14335:18;14325:81;;14391:4;14383:6;14379:17;14369:27;;14325:81;14453:2;14445:6;14442:14;14422:18;14419:38;14416:84;;;14472:18;;:::i;:::-;14416:84;14237:269;14186:320;;;:::o;14512:127::-;14607:1;14600:5;14597:12;14587:46;;14613:18;;:::i;:::-;14587:46;14512:127;:::o;14645:155::-;14704:7;14733:5;14722:16;;14739:55;14788:5;14739:55;:::i;:::-;14645:155;;;:::o;14806:::-;14876:9;14909:46;14949:5;14909:46;:::i;:::-;14896:59;;14806:155;;;:::o;14967:96::-;15001:8;15050:5;15045:3;15041:15;15020:36;;14967:96;;;:::o;15069:93::-;15106:7;15135:21;15150:5;15135:21;:::i;:::-;15124:32;;15069:93;;;:::o;15168:208::-;15293:76;15311:57;15362:5;15311:57;:::i;:::-;15293:76;:::i;:::-;15288:3;15281:89;15168:208;;:::o;15382:186::-;15496:65;15514:46;15554:5;15514:46;:::i;:::-;15496:65;:::i;:::-;15491:3;15484:78;15382:186;;:::o;15574:121::-;15662:2;15655:5;15652:13;15642:47;;15669:18;;:::i;:::-;15642:47;15574:121;:::o;15701:141::-;15753:7;15782:5;15771:16;;15788:48;15830:5;15788:48;:::i;:::-;15701:141;;;:::o;15848:::-;15911:9;15944:39;15977:5;15944:39;:::i;:::-;15931:52;;15848:141;;;:::o;15995:194::-;16113:69;16131:50;16175:5;16131:50;:::i;:::-;16113:69;:::i;:::-;16108:3;16101:82;15995:194;;:::o;16195:619::-;16405:3;16420:95;16511:3;16502:6;16420:95;:::i;:::-;16540:1;16535:3;16531:11;16524:18;;16552:84;16632:3;16623:6;16552:84;:::i;:::-;16661:1;16656:3;16652:11;16645:18;;16673:88;16757:3;16748:6;16673:88;:::i;:::-;16786:1;16781:3;16777:11;16770:18;;16805:3;16798:10;;16195:619;;;;;;:::o;16820:169::-;16904:11;16938:6;16933:3;16926:19;16978:4;16973:3;16969:14;16954:29;;16820:169;;;;:::o;16995:234::-;17135:34;17131:1;17123:6;17119:14;17112:58;17204:17;17199:2;17191:6;17187:15;17180:42;16995:234;:::o;17235:366::-;17377:3;17398:67;17462:2;17457:3;17398:67;:::i;:::-;17391:74;;17474:93;17563:3;17474:93;:::i;:::-;17592:2;17587:3;17583:12;17576:19;;17235:366;;;:::o;17607:419::-;17773:4;17811:2;17800:9;17796:18;17788:26;;17860:9;17854:4;17850:20;17846:1;17835:9;17831:17;17824:47;17888:131;18014:4;17888:131;:::i;:::-;17880:139;;17607:419;;;:::o;18032:180::-;18080:77;18077:1;18070:88;18177:4;18174:1;18167:15;18201:4;18198:1;18191:15;18218:305;18258:3;18277:20;18295:1;18277:20;:::i;:::-;18272:25;;18311:20;18329:1;18311:20;:::i;:::-;18306:25;;18465:1;18397:66;18393:74;18390:1;18387:81;18384:107;;;18471:18;;:::i;:::-;18384:107;18515:1;18512;18508:9;18501:16;;18218:305;;;;:::o;18529:173::-;18669:25;18665:1;18657:6;18653:14;18646:49;18529:173;:::o;18708:402::-;18868:3;18889:85;18971:2;18966:3;18889:85;:::i;:::-;18882:92;;18983:93;19072:3;18983:93;:::i;:::-;19101:2;19096:3;19092:12;19085:19;;18708:402;;;:::o;19116:167::-;19256:19;19252:1;19244:6;19240:14;19233:43;19116:167;:::o;19289:402::-;19449:3;19470:85;19552:2;19547:3;19470:85;:::i;:::-;19463:92;;19564:93;19653:3;19564:93;:::i;:::-;19682:2;19677:3;19673:12;19666:19;;19289:402;;;:::o;19697:967::-;20079:3;20101:148;20245:3;20101:148;:::i;:::-;20094:155;;20266:95;20357:3;20348:6;20266:95;:::i;:::-;20259:102;;20378:148;20522:3;20378:148;:::i;:::-;20371:155;;20543:95;20634:3;20625:6;20543:95;:::i;:::-;20536:102;;20655:3;20648:10;;19697:967;;;;;:::o;20670:364::-;20758:3;20786:39;20819:5;20786:39;:::i;:::-;20841:71;20905:6;20900:3;20841:71;:::i;:::-;20834:78;;20921:52;20966:6;20961:3;20954:4;20947:5;20943:16;20921:52;:::i;:::-;20998:29;21020:6;20998:29;:::i;:::-;20993:3;20989:39;20982:46;;20762:272;20670:364;;;;:::o;21040:313::-;21153:4;21191:2;21180:9;21176:18;21168:26;;21240:9;21234:4;21230:20;21226:1;21215:9;21211:17;21204:47;21268:78;21341:4;21332:6;21268:78;:::i;:::-;21260:86;;21040:313;;;;:::o;21359:348::-;21399:7;21422:20;21440:1;21422:20;:::i;:::-;21417:25;;21456:20;21474:1;21456:20;:::i;:::-;21451:25;;21644:1;21576:66;21572:74;21569:1;21566:81;21561:1;21554:9;21547:17;21543:105;21540:131;;;21651:18;;:::i;:::-;21540:131;21699:1;21696;21692:9;21681:20;;21359:348;;;;:::o;21713:180::-;21761:77;21758:1;21751:88;21858:4;21855:1;21848:15;21882:4;21879:1;21872:15;21899:171;21938:3;21961:24;21979:5;21961:24;:::i;:::-;21952:33;;22007:4;22000:5;21997:15;21994:41;;;22015:18;;:::i;:::-;21994:41;22062:1;22055:5;22051:13;22044:20;;21899:171;;;:::o;22076:182::-;22216:34;22212:1;22204:6;22200:14;22193:58;22076:182;:::o;22264:366::-;22406:3;22427:67;22491:2;22486:3;22427:67;:::i;:::-;22420:74;;22503:93;22592:3;22503:93;:::i;:::-;22621:2;22616:3;22612:12;22605:19;;22264:366;;;:::o;22636:419::-;22802:4;22840:2;22829:9;22825:18;22817:26;;22889:9;22883:4;22879:20;22875:1;22864:9;22860:17;22853:47;22917:131;23043:4;22917:131;:::i;:::-;22909:139;;22636:419;;;:::o;23061:191::-;23101:4;23121:20;23139:1;23121:20;:::i;:::-;23116:25;;23155:20;23173:1;23155:20;:::i;:::-;23150:25;;23194:1;23191;23188:8;23185:34;;;23199:18;;:::i;:::-;23185:34;23244:1;23241;23237:9;23229:17;;23061:191;;;;:::o;23258:180::-;23306:77;23303:1;23296:88;23403:4;23400:1;23393:15;23427:4;23424:1;23417:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport './RolesManager.sol';\nimport './Certification.sol';\nimport './Region.sol';\nimport './Activity.sol';\n\n/**\n * @title GreenPassCertification contract\n * @author Alessandro Straziota, Michele Cirillo\n * @notice Contratto che offre strumenti utili per la verifica della validità dei green pass rispetto a determinate attività.\n * @dev Contratto che offre strumenti utili per la verifica della validità dei green pass rispetto a determinate attività.\n */\ncontract GreenPassCertification is RolesManager, Certification, Region, Activity {\n\n  /**\n   * @dev mappa `QRCODE` => `GreenPass`\n   */\n  mapping (string => GreenPass) private certificates;\n  \n  /**\n   * @dev Funzione che genera un certificato di tipo `certificationType` e lo assoccia al suo identificatore `qrcode`.\n   * La transazione va a buon fine solo se colui che invoca il metodo `msg.sender` ha il ruolo `CERTIFICATION_MINTER_ROLE`.\n   * @param certificationType il tipo del certificato rilasciato\n   * @param qrcode il codice qr del certificato\n   */\n  function emitCertification(CertificationType certificationType, string memory qrcode) public onlyRole(CERTIFICATION_MINTER_ROLE) {\n    //require(hasRole(CERTIFICATION_MINTER_ROLE, msg.sender), \"ONLY AUTHORIZED ENTITIES CAN CREATE A NEW CERTIFICATION\");\n\n    GreenPass memory certificate = GreenPass(\n        qrcode,                       // qrcode\n        msg.sender,                   // emitter\n        certificationType,            // certificationType\n        block.timestamp,              // creation\n        durations[certificationType], // duration\n        false                         // invalidated\n    );\n    certificates[qrcode] = certificate;\n  }\n\n  /**\n   * @dev Funzione che dato il QR-code di un green pass ritorna `true` se è scaduto, `false` altrimenti.\n   * @param qrcode il QR-code presente su un green pass\n   * @return       isExpired\n   */\n  function isExpired(string memory qrcode) public view returns (bool) {\n    GreenPass memory certificate = certificates[qrcode];\n    return block.timestamp > certificate.creation + certificate.duration;\n  }\n\n  /**\n   * @dev Funzione che dato il QR-code di un green pass lo invalida.\n   * Solo un indirizzo con ruolo `CERTIFICATION_MINTER_ROLE` può invocare questa funzione.\n   */\n  function invalidateCertificate(string memory qrcode) public onlyRole(CERTIFICATION_MINTER_ROLE) {\n    //require(hasRole(CERTIFICATION_MINTER_ROLE, msg.sender), \"ONLY AUTHORIZED ENTITIES CAN INVALIDATE A CERTIFICATION\");\n    certificates[qrcode].invalidated = true;\n  }\n\n  /// *********\n\n  /**\n   * @dev Funzione che assegna il colore `color` alla regione `region`.\n   * Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.\n   */\n  function setRegionColor(Regions region, Colors color) public onlyRole(ADMIN_ROLE) {\n    colors[region] = color;\n  }\n\n  /// *********\n  /// RULES\n  using EnumerableSet for EnumerableSet.Bytes32Set;\n  \n  /**\n   * @dev struct che definisce una regola `Rule`.\n   * Per regola si intende un insieme composto da:\n   *  - un tipo di certificato `certificationType:CertificationType`\n   *  - un colore di regione `colro:Colors`\n   *  - un'attività `activity:Activities`\n   * Se una regola `R` è presente nell'insieme delle regole valide, allora un utente\n   * avente il green pass di tipo `R.certificationType` potrà svolgere l'attività `R.activity`\n   * in una regione colorata del colore `R.color`.\n   */\n  struct Rule {\n    CertificationType certificationType;\n    Colors color;\n    Activities activity;\n  }\n\n  /**\n   * Se una regola `R` è presente nell'insieme delle regole valide, allora un utente\n   * avente il green pass di tipo `R.certificationType` potrà svolgere l'attività `R.activity`\n   * in una regione colorata del colore `R.color`.\n   */\n  mapping (bytes32 => Rule) private _rules;\n  EnumerableSet.Bytes32Set private _rulesSet;\n\n  /**\n   * @dev funzione che aggiunge una nuova regola all'insieme di regole valide.\n   * Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.\n   * @param certificationType il tipo della certificazione.\n   * @param color il colore della regione.\n   * @param activity l'attività in questione.\n   */\n  function addRole(CertificationType certificationType, Colors color, Activities activity) public onlyRole(ADMIN_ROLE) {\n    Rule memory role = Rule(certificationType, color, activity);\n    bytes32 key = keccak256( abi.encodePacked(role.certificationType, role.color, role.activity) );\n    _rules[key] = role;\n    EnumerableSet.add(_rulesSet, key);\n  }\n\n  /**\n   * @dev funzione che rimuove una regola all'insieme di regole valide.\n   * Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.\n   * @param certificationType il tipo della certificazione.\n   * @param color il colore della regione.\n   * @param activity l'attività in questione.\n   */\n  function removeRole(CertificationType certificationType, Colors color, Activities activity) public onlyRole(ADMIN_ROLE) {\n    Rule memory role = Rule(certificationType, color, activity);\n    bytes32 key = keccak256( abi.encodePacked(role.certificationType, role.color, role.activity) );\n    if( EnumerableSet.remove(_rulesSet, key) ) {\n      delete _rules[key];\n    }\n  }\n\n  /// *********\n  /// QUERY\n\n  /**\n   * @dev funzione che dato un codice QR relativo a un greenpass ritorna `true` se è consentito\n   * effettuare una data attività `activity` in una data regione `region`.\n   * @param qrcode il qrcode di un greenpass.\n   * @param activity l'attività che si desidera svolgare.\n   * @param region la regione in cui si desidera svolgere l'attività.\n   * @return `true` se è consentito svolgere tale attività, `false` altrimenti.\n   */\n  function canDo(string memory qrcode, Activities activity, Regions region) public view returns (bool) {\n    GreenPass memory greenPass = certificates[qrcode]; // verificare che succede se non esiste il green pass in questione.\n    if (isExpired(qrcode) || greenPass.invalidated) {\n      return false;\n    }\n    \n    Colors regionColors = colors[region];\n    Rule memory role = Rule(greenPass.certificationType, regionColors, activity);\n    bytes32 key = keccak256( abi.encodePacked(role.certificationType, role.color, role.activity) );\n    \n    if ( EnumerableSet.contains(_rulesSet, key) ) return true;\n    else return false; \n  }\n\n}",
  "sourcePath": "/home/alessandro/SDC/progetto-SDC/contracts/GreenPassCertification.sol",
  "ast": {
    "absolutePath": "project:/contracts/GreenPassCertification.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "Activity": [
        1259
      ],
      "Certification": [
        1342
      ],
      "Context": [
        403
      ],
      "ERC165": [
        630
      ],
      "EnumerableSet": [
        1241
      ],
      "GreenPassCertification": [
        1663
      ],
      "IAccessControl": [
        381
      ],
      "IERC165": [
        642
      ],
      "Region": [
        1861
      ],
      "RolesManager": [
        1918
      ],
      "Strings": [
        606
      ]
    },
    "id": 1664,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1344,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "id": 1345,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1242,
        "src": "66:65:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RolesManager.sol",
        "file": "./RolesManager.sol",
        "id": 1346,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1919,
        "src": "132:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Certification.sol",
        "file": "./Certification.sol",
        "id": 1347,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1343,
        "src": "161:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Region.sol",
        "file": "./Region.sol",
        "id": 1348,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1862,
        "src": "191:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Activity.sol",
        "file": "./Activity.sol",
        "id": 1349,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1260,
        "src": "214:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1351,
              "name": "RolesManager",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1918,
              "src": "627:12:9"
            },
            "id": 1352,
            "nodeType": "InheritanceSpecifier",
            "src": "627:12:9"
          },
          {
            "baseName": {
              "id": 1353,
              "name": "Certification",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1342,
              "src": "641:13:9"
            },
            "id": 1354,
            "nodeType": "InheritanceSpecifier",
            "src": "641:13:9"
          },
          {
            "baseName": {
              "id": 1355,
              "name": "Region",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1861,
              "src": "656:6:9"
            },
            "id": 1356,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:9"
          },
          {
            "baseName": {
              "id": 1357,
              "name": "Activity",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1259,
              "src": "664:8:9"
            },
            "id": 1358,
            "nodeType": "InheritanceSpecifier",
            "src": "664:8:9"
          }
        ],
        "canonicalName": "GreenPassCertification",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1350,
          "nodeType": "StructuredDocumentation",
          "src": "240:351:9",
          "text": " @title GreenPassCertification contract\n @author Alessandro Straziota, Michele Cirillo\n @notice Contratto che offre strumenti utili per la verifica della validità dei green pass rispetto a determinate attività.\n @dev Contratto che offre strumenti utili per la verifica della validità dei green pass rispetto a determinate attività."
        },
        "fullyImplemented": true,
        "id": 1663,
        "linearizedBaseContracts": [
          1663,
          1259,
          1861,
          1342,
          1918,
          308,
          630,
          642,
          381,
          403
        ],
        "name": "GreenPassCertification",
        "nameLocation": "601:22:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1359,
              "nodeType": "StructuredDocumentation",
              "src": "678:49:9",
              "text": " @dev mappa `QRCODE` => `GreenPass`"
            },
            "id": 1364,
            "mutability": "mutable",
            "name": "certificates",
            "nameLocation": "768:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1663,
            "src": "730:50:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
              "typeString": "mapping(string => struct Certification.GreenPass)"
            },
            "typeName": {
              "id": 1363,
              "keyType": {
                "id": 1360,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "739:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "730:29:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                "typeString": "mapping(string => struct Certification.GreenPass)"
              },
              "valueType": {
                "id": 1362,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1361,
                  "name": "GreenPass",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1283,
                  "src": "749:9:9"
                },
                "referencedDeclaration": 1283,
                "src": "749:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_GreenPass_$1283_storage_ptr",
                  "typeString": "struct Certification.GreenPass"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1398,
              "nodeType": "Block",
              "src": "1284:530:9",
              "statements": [
                {
                  "assignments": [
                    1378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1378,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nameLocation": "1430:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "1413:28:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                        "typeString": "struct Certification.GreenPass"
                      },
                      "typeName": {
                        "id": 1377,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1376,
                          "name": "GreenPass",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1283,
                          "src": "1413:9:9"
                        },
                        "referencedDeclaration": 1283,
                        "src": "1413:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_storage_ptr",
                          "typeString": "struct Certification.GreenPass"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1391,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1380,
                        "name": "qrcode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "1463:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1381,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1511:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1511:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1383,
                        "name": "certificationType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1368,
                        "src": "1560:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        }
                      },
                      {
                        "expression": {
                          "id": 1384,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1619:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1619:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1386,
                          "name": "durations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1288,
                          "src": "1669:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_CertificationType_$1269_$_t_uint256_$",
                            "typeString": "mapping(enum Certification.CertificationType => uint256)"
                          }
                        },
                        "id": 1388,
                        "indexExpression": {
                          "id": 1387,
                          "name": "certificationType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1368,
                          "src": "1679:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CertificationType_$1269",
                            "typeString": "enum Certification.CertificationType"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1669:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1379,
                      "name": "GreenPass",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1283,
                      "src": "1444:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_GreenPass_$1283_storage_ptr_$",
                        "typeString": "type(struct Certification.GreenPass storage pointer)"
                      }
                    },
                    "id": 1390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:325:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                      "typeString": "struct Certification.GreenPass memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1413:356:9"
                },
                {
                  "expression": {
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1392,
                        "name": "certificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "1775:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                          "typeString": "mapping(string memory => struct Certification.GreenPass storage ref)"
                        }
                      },
                      "id": 1394,
                      "indexExpression": {
                        "id": 1393,
                        "name": "qrcode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "1788:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1775:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                        "typeString": "struct Certification.GreenPass storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1395,
                      "name": "certificate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "1798:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                        "typeString": "struct Certification.GreenPass memory"
                      }
                    },
                    "src": "1775:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                      "typeString": "struct Certification.GreenPass storage ref"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "1775:34:9"
                }
              ]
            },
            "documentation": {
              "id": 1365,
              "nodeType": "StructuredDocumentation",
              "src": "787:365:9",
              "text": " @dev Funzione che genera un certificato di tipo `certificationType` e lo assoccia al suo identificatore `qrcode`.\n La transazione va a buon fine solo se colui che invoca il metodo `msg.sender` ha il ruolo `CERTIFICATION_MINTER_ROLE`.\n @param certificationType il tipo del certificato rilasciato\n @param qrcode il codice qr del certificato"
            },
            "functionSelector": "8bbe97c2",
            "id": 1399,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1373,
                    "name": "CERTIFICATION_MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1877,
                    "src": "1257:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1374,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1372,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1248:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1248:35:9"
              }
            ],
            "name": "emitCertification",
            "nameLocation": "1164:17:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "certificationType",
                  "nameLocation": "1200:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "1182:35:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificationType_$1269",
                    "typeString": "enum Certification.CertificationType"
                  },
                  "typeName": {
                    "id": 1367,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1366,
                      "name": "CertificationType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1269,
                      "src": "1182:17:9"
                    },
                    "referencedDeclaration": 1269,
                    "src": "1182:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CertificationType_$1269",
                      "typeString": "enum Certification.CertificationType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1370,
                  "mutability": "mutable",
                  "name": "qrcode",
                  "nameLocation": "1233:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "1219:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1369,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1181:59:9"
            },
            "returnParameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1284:0:9"
            },
            "scope": 1663,
            "src": "1155:659:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1423,
              "nodeType": "Block",
              "src": "2089:136:9",
              "statements": [
                {
                  "assignments": [
                    1409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1409,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nameLocation": "2112:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1423,
                      "src": "2095:28:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                        "typeString": "struct Certification.GreenPass"
                      },
                      "typeName": {
                        "id": 1408,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1407,
                          "name": "GreenPass",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1283,
                          "src": "2095:9:9"
                        },
                        "referencedDeclaration": 1283,
                        "src": "2095:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_storage_ptr",
                          "typeString": "struct Certification.GreenPass"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1413,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1410,
                      "name": "certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "2126:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                        "typeString": "mapping(string memory => struct Certification.GreenPass storage ref)"
                      }
                    },
                    "id": 1412,
                    "indexExpression": {
                      "id": 1411,
                      "name": "qrcode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "2139:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2126:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                      "typeString": "struct Certification.GreenPass storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2095:51:9"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1414,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2159:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2159:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1416,
                          "name": "certificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1409,
                          "src": "2177:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                            "typeString": "struct Certification.GreenPass memory"
                          }
                        },
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1278,
                        "src": "2177:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1418,
                          "name": "certificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1409,
                          "src": "2200:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                            "typeString": "struct Certification.GreenPass memory"
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "duration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1280,
                        "src": "2200:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2177:43:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2159:61:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1406,
                  "id": 1422,
                  "nodeType": "Return",
                  "src": "2152:68:9"
                }
              ]
            },
            "documentation": {
              "id": 1400,
              "nodeType": "StructuredDocumentation",
              "src": "1818:200:9",
              "text": " @dev Funzione che dato il QR-code di un green pass ritorna `true` se è scaduto, `false` altrimenti.\n @param qrcode il QR-code presente su un green pass\n @return       isExpired"
            },
            "functionSelector": "c64fafbc",
            "id": 1424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isExpired",
            "nameLocation": "2030:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1402,
                  "mutability": "mutable",
                  "name": "qrcode",
                  "nameLocation": "2054:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2040:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1401,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2039:22:9"
            },
            "returnParameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2083:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2083:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2082:6:9"
            },
            "scope": 1663,
            "src": "2021:204:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "2498:172:9",
              "statements": [
                {
                  "expression": {
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1433,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "2626:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                            "typeString": "mapping(string memory => struct Certification.GreenPass storage ref)"
                          }
                        },
                        "id": 1435,
                        "indexExpression": {
                          "id": 1434,
                          "name": "qrcode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2639:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2626:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                          "typeString": "struct Certification.GreenPass storage ref"
                        }
                      },
                      "id": 1436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "invalidated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "2626:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2661:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2626:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1439,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:39:9"
                }
              ]
            },
            "documentation": {
              "id": 1425,
              "nodeType": "StructuredDocumentation",
              "src": "2229:170:9",
              "text": " @dev Funzione che dato il QR-code di un green pass lo invalida.\n Solo un indirizzo con ruolo `CERTIFICATION_MINTER_ROLE` può invocare questa funzione."
            },
            "functionSelector": "24f349f9",
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1430,
                    "name": "CERTIFICATION_MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1877,
                    "src": "2471:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1431,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1429,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2462:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2462:35:9"
              }
            ],
            "name": "invalidateCertificate",
            "nameLocation": "2411:21:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "qrcode",
                  "nameLocation": "2447:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "2433:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2432:22:9"
            },
            "returnParameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2498:0:9"
            },
            "scope": 1663,
            "src": "2402:268:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1460,
              "nodeType": "Block",
              "src": "2934:33:9",
              "statements": [
                {
                  "expression": {
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1454,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "2940:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Regions_$1686_$_t_enum$_Colors_$1690_$",
                          "typeString": "mapping(enum Region.Regions => enum Region.Colors)"
                        }
                      },
                      "id": 1456,
                      "indexExpression": {
                        "id": 1455,
                        "name": "region",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "2947:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Regions_$1686",
                          "typeString": "enum Region.Regions"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2940:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Colors_$1690",
                        "typeString": "enum Region.Colors"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1457,
                      "name": "color",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
                      "src": "2957:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Colors_$1690",
                        "typeString": "enum Region.Colors"
                      }
                    },
                    "src": "2940:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:22:9"
                }
              ]
            },
            "documentation": {
              "id": 1442,
              "nodeType": "StructuredDocumentation",
              "src": "2691:158:9",
              "text": " @dev Funzione che assegna il colore `color` alla regione `region`.\n Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione."
            },
            "functionSelector": "47201b84",
            "id": 1461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1451,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1872,
                    "src": "2922:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1450,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2913:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2913:20:9"
              }
            ],
            "name": "setRegionColor",
            "nameLocation": "2861:14:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1445,
                  "mutability": "mutable",
                  "name": "region",
                  "nameLocation": "2884:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "2876:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Regions_$1686",
                    "typeString": "enum Region.Regions"
                  },
                  "typeName": {
                    "id": 1444,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1443,
                      "name": "Regions",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1686,
                      "src": "2876:7:9"
                    },
                    "referencedDeclaration": 1686,
                    "src": "2876:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Regions_$1686",
                      "typeString": "enum Region.Regions"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1448,
                  "mutability": "mutable",
                  "name": "color",
                  "nameLocation": "2899:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "2892:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Colors_$1690",
                    "typeString": "enum Region.Colors"
                  },
                  "typeName": {
                    "id": 1447,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1446,
                      "name": "Colors",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1690,
                      "src": "2892:6:9"
                    },
                    "referencedDeclaration": 1690,
                    "src": "2892:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2875:30:9"
            },
            "returnParameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2934:0:9"
            },
            "scope": 1663,
            "src": "2852:115:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1465,
            "libraryName": {
              "id": 1462,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1241,
              "src": "3005:13:9"
            },
            "nodeType": "UsingForDirective",
            "src": "2999:49:9",
            "typeName": {
              "id": 1464,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1463,
                "name": "EnumerableSet.Bytes32Set",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 847,
                "src": "3023:24:9"
              },
              "referencedDeclaration": 847,
              "src": "3023:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$847_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            }
          },
          {
            "canonicalName": "GreenPassCertification.Rule",
            "id": 1475,
            "members": [
              {
                "constant": false,
                "id": 1468,
                "mutability": "mutable",
                "name": "certificationType",
                "nameLocation": "3593:17:9",
                "nodeType": "VariableDeclaration",
                "scope": 1475,
                "src": "3575:35:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_CertificationType_$1269",
                  "typeString": "enum Certification.CertificationType"
                },
                "typeName": {
                  "id": 1467,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1466,
                    "name": "CertificationType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1269,
                    "src": "3575:17:9"
                  },
                  "referencedDeclaration": 1269,
                  "src": "3575:17:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificationType_$1269",
                    "typeString": "enum Certification.CertificationType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1471,
                "mutability": "mutable",
                "name": "color",
                "nameLocation": "3623:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1475,
                "src": "3616:12:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Colors_$1690",
                  "typeString": "enum Region.Colors"
                },
                "typeName": {
                  "id": 1470,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1469,
                    "name": "Colors",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1690,
                    "src": "3616:6:9"
                  },
                  "referencedDeclaration": 1690,
                  "src": "3616:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Colors_$1690",
                    "typeString": "enum Region.Colors"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1474,
                "mutability": "mutable",
                "name": "activity",
                "nameLocation": "3645:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 1475,
                "src": "3634:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Activities_$1258",
                  "typeString": "enum Activity.Activities"
                },
                "typeName": {
                  "id": 1473,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1472,
                    "name": "Activities",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1258,
                    "src": "3634:10:9"
                  },
                  "referencedDeclaration": 1258,
                  "src": "3634:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Activities_$1258",
                    "typeString": "enum Activity.Activities"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rule",
            "nameLocation": "3564:4:9",
            "nodeType": "StructDefinition",
            "scope": 1663,
            "src": "3557:101:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1476,
              "nodeType": "StructuredDocumentation",
              "src": "3662:243:9",
              "text": " Se una regola `R` è presente nell'insieme delle regole valide, allora un utente\n avente il green pass di tipo `R.certificationType` potrà svolgere l'attività `R.activity`\n in una regione colorata del colore `R.color`."
            },
            "id": 1481,
            "mutability": "mutable",
            "name": "_rules",
            "nameLocation": "3942:6:9",
            "nodeType": "VariableDeclaration",
            "scope": 1663,
            "src": "3908:40:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Rule_$1475_storage_$",
              "typeString": "mapping(bytes32 => struct GreenPassCertification.Rule)"
            },
            "typeName": {
              "id": 1480,
              "keyType": {
                "id": 1477,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3917:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3908:25:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Rule_$1475_storage_$",
                "typeString": "mapping(bytes32 => struct GreenPassCertification.Rule)"
              },
              "valueType": {
                "id": 1479,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1478,
                  "name": "Rule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1475,
                  "src": "3928:4:9"
                },
                "referencedDeclaration": 1475,
                "src": "3928:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Rule_$1475_storage_ptr",
                  "typeString": "struct GreenPassCertification.Rule"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1484,
            "mutability": "mutable",
            "name": "_rulesSet",
            "nameLocation": "3985:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 1663,
            "src": "3952:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
              "typeString": "struct EnumerableSet.Bytes32Set"
            },
            "typeName": {
              "id": 1483,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1482,
                "name": "EnumerableSet.Bytes32Set",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 847,
                "src": "3952:24:9"
              },
              "referencedDeclaration": 847,
              "src": "3952:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$847_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "4434:233:9",
              "statements": [
                {
                  "assignments": [
                    1502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1502,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "4452:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "4440:16:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                        "typeString": "struct GreenPassCertification.Rule"
                      },
                      "typeName": {
                        "id": 1501,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1500,
                          "name": "Rule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1475,
                          "src": "4440:4:9"
                        },
                        "referencedDeclaration": 1475,
                        "src": "4440:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rule_$1475_storage_ptr",
                          "typeString": "struct GreenPassCertification.Rule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1508,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1504,
                        "name": "certificationType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1488,
                        "src": "4464:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        }
                      },
                      {
                        "id": 1505,
                        "name": "color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "4483:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        }
                      },
                      {
                        "id": 1506,
                        "name": "activity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1494,
                        "src": "4490:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        },
                        {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        },
                        {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      ],
                      "id": 1503,
                      "name": "Rule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "4459:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Rule_$1475_storage_ptr_$",
                        "typeString": "type(struct GreenPassCertification.Rule storage pointer)"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                      "typeString": "struct GreenPassCertification.Rule memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4440:59:9"
                },
                {
                  "assignments": [
                    1510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1510,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "4513:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "4505:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1509,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4505:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1522,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1514,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1502,
                              "src": "4547:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1515,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "certificationType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1468,
                            "src": "4547:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            }
                          },
                          {
                            "expression": {
                              "id": 1516,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1502,
                              "src": "4571:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1517,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "color",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1471,
                            "src": "4571:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            }
                          },
                          {
                            "expression": {
                              "id": 1518,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1502,
                              "src": "4583:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "activity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1474,
                            "src": "4583:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            },
                            {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            },
                            {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          ],
                          "expression": {
                            "id": 1512,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4530:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4530:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4530:67:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1511,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4519:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4519:80:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4505:94:9"
                },
                {
                  "expression": {
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1523,
                        "name": "_rules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "4605:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Rule_$1475_storage_$",
                          "typeString": "mapping(bytes32 => struct GreenPassCertification.Rule storage ref)"
                        }
                      },
                      "id": 1525,
                      "indexExpression": {
                        "id": 1524,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "4612:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4605:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_storage",
                        "typeString": "struct GreenPassCertification.Rule storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1526,
                      "name": "role",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1502,
                      "src": "4619:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                        "typeString": "struct GreenPassCertification.Rule memory"
                      }
                    },
                    "src": "4605:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rule_$1475_storage",
                      "typeString": "struct GreenPassCertification.Rule storage ref"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "4605:18:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1532,
                        "name": "_rulesSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4647:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      {
                        "id": 1533,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "4658:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1529,
                        "name": "EnumerableSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "4629:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1241_$",
                          "typeString": "type(library EnumerableSet)"
                        }
                      },
                      "id": 1531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 865,
                      "src": "4629:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$847_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4629:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "4629:33:9"
                }
              ]
            },
            "documentation": {
              "id": 1485,
              "nodeType": "StructuredDocumentation",
              "src": "3999:315:9",
              "text": " @dev funzione che aggiunge una nuova regola all'insieme di regole valide.\n Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.\n @param certificationType il tipo della certificazione.\n @param color il colore della regione.\n @param activity l'attività in questione."
            },
            "functionSelector": "5e41256b",
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1497,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1872,
                    "src": "4422:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1496,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "4413:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4413:20:9"
              }
            ],
            "name": "addRole",
            "nameLocation": "4326:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1488,
                  "mutability": "mutable",
                  "name": "certificationType",
                  "nameLocation": "4352:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "4334:35:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificationType_$1269",
                    "typeString": "enum Certification.CertificationType"
                  },
                  "typeName": {
                    "id": 1487,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1486,
                      "name": "CertificationType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1269,
                      "src": "4334:17:9"
                    },
                    "referencedDeclaration": 1269,
                    "src": "4334:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CertificationType_$1269",
                      "typeString": "enum Certification.CertificationType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1491,
                  "mutability": "mutable",
                  "name": "color",
                  "nameLocation": "4378:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "4371:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Colors_$1690",
                    "typeString": "enum Region.Colors"
                  },
                  "typeName": {
                    "id": 1490,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1489,
                      "name": "Colors",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1690,
                      "src": "4371:6:9"
                    },
                    "referencedDeclaration": 1690,
                    "src": "4371:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1494,
                  "mutability": "mutable",
                  "name": "activity",
                  "nameLocation": "4396:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "4385:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Activities_$1258",
                    "typeString": "enum Activity.Activities"
                  },
                  "typeName": {
                    "id": 1493,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1492,
                      "name": "Activities",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1258,
                      "src": "4385:10:9"
                    },
                    "referencedDeclaration": 1258,
                    "src": "4385:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Activities_$1258",
                      "typeString": "enum Activity.Activities"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4333:72:9"
            },
            "returnParameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4434:0:9"
            },
            "scope": 1663,
            "src": "4317:350:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1588,
              "nodeType": "Block",
              "src": "5102:251:9",
              "statements": [
                {
                  "assignments": [
                    1555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1555,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "5120:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1588,
                      "src": "5108:16:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                        "typeString": "struct GreenPassCertification.Rule"
                      },
                      "typeName": {
                        "id": 1554,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1553,
                          "name": "Rule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1475,
                          "src": "5108:4:9"
                        },
                        "referencedDeclaration": 1475,
                        "src": "5108:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rule_$1475_storage_ptr",
                          "typeString": "struct GreenPassCertification.Rule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1561,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1557,
                        "name": "certificationType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "5132:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        }
                      },
                      {
                        "id": 1558,
                        "name": "color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "5151:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        }
                      },
                      {
                        "id": 1559,
                        "name": "activity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1547,
                        "src": "5158:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        },
                        {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        },
                        {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      ],
                      "id": 1556,
                      "name": "Rule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "5127:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Rule_$1475_storage_ptr_$",
                        "typeString": "type(struct GreenPassCertification.Rule storage pointer)"
                      }
                    },
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5127:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                      "typeString": "struct GreenPassCertification.Rule memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5108:59:9"
                },
                {
                  "assignments": [
                    1563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1563,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "5181:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1588,
                      "src": "5173:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1562,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5173:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1575,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1567,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1555,
                              "src": "5215:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "certificationType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1468,
                            "src": "5215:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            }
                          },
                          {
                            "expression": {
                              "id": 1569,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1555,
                              "src": "5239:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "color",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1471,
                            "src": "5239:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            }
                          },
                          {
                            "expression": {
                              "id": 1571,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1555,
                              "src": "5251:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "activity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1474,
                            "src": "5251:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            },
                            {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            },
                            {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          ],
                          "expression": {
                            "id": 1565,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5198:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5198:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5198:67:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1564,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "5187:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5187:80:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5173:94:9"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 1578,
                        "name": "_rulesSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "5298:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      {
                        "id": 1579,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1563,
                        "src": "5309:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1576,
                        "name": "EnumerableSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "5277:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1241_$",
                          "typeString": "type(library EnumerableSet)"
                        }
                      },
                      "id": 1577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 883,
                      "src": "5277:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$847_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5277:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1587,
                  "nodeType": "IfStatement",
                  "src": "5273:76:9",
                  "trueBody": {
                    "id": 1586,
                    "nodeType": "Block",
                    "src": "5316:33:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5324:18:9",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1581,
                              "name": "_rules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "5331:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Rule_$1475_storage_$",
                                "typeString": "mapping(bytes32 => struct GreenPassCertification.Rule storage ref)"
                              }
                            },
                            "id": 1583,
                            "indexExpression": {
                              "id": 1582,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1563,
                              "src": "5338:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5331:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rule_$1475_storage",
                              "typeString": "struct GreenPassCertification.Rule storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1585,
                        "nodeType": "ExpressionStatement",
                        "src": "5324:18:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1538,
              "nodeType": "StructuredDocumentation",
              "src": "4671:308:9",
              "text": " @dev funzione che rimuove una regola all'insieme di regole valide.\n Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.\n @param certificationType il tipo della certificazione.\n @param color il colore della regione.\n @param activity l'attività in questione."
            },
            "functionSelector": "7d5bfe44",
            "id": 1589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1550,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1872,
                    "src": "5090:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1551,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1549,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "5081:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5081:20:9"
              }
            ],
            "name": "removeRole",
            "nameLocation": "4991:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "certificationType",
                  "nameLocation": "5020:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "5002:35:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificationType_$1269",
                    "typeString": "enum Certification.CertificationType"
                  },
                  "typeName": {
                    "id": 1540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1539,
                      "name": "CertificationType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1269,
                      "src": "5002:17:9"
                    },
                    "referencedDeclaration": 1269,
                    "src": "5002:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CertificationType_$1269",
                      "typeString": "enum Certification.CertificationType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "color",
                  "nameLocation": "5046:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "5039:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Colors_$1690",
                    "typeString": "enum Region.Colors"
                  },
                  "typeName": {
                    "id": 1543,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1542,
                      "name": "Colors",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1690,
                      "src": "5039:6:9"
                    },
                    "referencedDeclaration": 1690,
                    "src": "5039:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1547,
                  "mutability": "mutable",
                  "name": "activity",
                  "nameLocation": "5064:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "5053:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Activities_$1258",
                    "typeString": "enum Activity.Activities"
                  },
                  "typeName": {
                    "id": 1546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1545,
                      "name": "Activities",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1258,
                      "src": "5053:10:9"
                    },
                    "referencedDeclaration": 1258,
                    "src": "5053:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Activities_$1258",
                      "typeString": "enum Activity.Activities"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5001:72:9"
            },
            "returnParameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5102:0:9"
            },
            "scope": 1663,
            "src": "4982:371:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1661,
              "nodeType": "Block",
              "src": "5930:529:9",
              "statements": [
                {
                  "assignments": [
                    1605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1605,
                      "mutability": "mutable",
                      "name": "greenPass",
                      "nameLocation": "5953:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "5936:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                        "typeString": "struct Certification.GreenPass"
                      },
                      "typeName": {
                        "id": 1604,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1603,
                          "name": "GreenPass",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1283,
                          "src": "5936:9:9"
                        },
                        "referencedDeclaration": 1283,
                        "src": "5936:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_storage_ptr",
                          "typeString": "struct Certification.GreenPass"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1609,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1606,
                      "name": "certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "5965:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                        "typeString": "mapping(string memory => struct Certification.GreenPass storage ref)"
                      }
                    },
                    "id": 1608,
                    "indexExpression": {
                      "id": 1607,
                      "name": "qrcode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1592,
                      "src": "5978:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5965:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                      "typeString": "struct Certification.GreenPass storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5936:49:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1611,
                          "name": "qrcode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1592,
                          "src": "6073:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 1610,
                        "name": "isExpired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1424,
                        "src": "6063:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (string memory) view returns (bool)"
                        }
                      },
                      "id": 1612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6063:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "expression": {
                        "id": 1613,
                        "name": "greenPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1605,
                        "src": "6084:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                          "typeString": "struct Certification.GreenPass memory"
                        }
                      },
                      "id": 1614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invalidated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "6084:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6063:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1619,
                  "nodeType": "IfStatement",
                  "src": "6059:75:9",
                  "trueBody": {
                    "id": 1618,
                    "nodeType": "Block",
                    "src": "6107:27:9",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6122:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1602,
                        "id": 1617,
                        "nodeType": "Return",
                        "src": "6115:12:9"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1622,
                      "mutability": "mutable",
                      "name": "regionColors",
                      "nameLocation": "6151:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "6144:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Colors_$1690",
                        "typeString": "enum Region.Colors"
                      },
                      "typeName": {
                        "id": 1621,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1620,
                          "name": "Colors",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1690,
                          "src": "6144:6:9"
                        },
                        "referencedDeclaration": 1690,
                        "src": "6144:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1626,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1623,
                      "name": "colors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1696,
                      "src": "6166:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Regions_$1686_$_t_enum$_Colors_$1690_$",
                        "typeString": "mapping(enum Region.Regions => enum Region.Colors)"
                      }
                    },
                    "id": 1625,
                    "indexExpression": {
                      "id": 1624,
                      "name": "region",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "6173:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Regions_$1686",
                        "typeString": "enum Region.Regions"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6166:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6144:36:9"
                },
                {
                  "assignments": [
                    1629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1629,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "6198:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "6186:16:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                        "typeString": "struct GreenPassCertification.Rule"
                      },
                      "typeName": {
                        "id": 1628,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1627,
                          "name": "Rule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1475,
                          "src": "6186:4:9"
                        },
                        "referencedDeclaration": 1475,
                        "src": "6186:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rule_$1475_storage_ptr",
                          "typeString": "struct GreenPassCertification.Rule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1636,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1631,
                          "name": "greenPass",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1605,
                          "src": "6210:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                            "typeString": "struct Certification.GreenPass memory"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certificationType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1276,
                        "src": "6210:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        }
                      },
                      {
                        "id": 1633,
                        "name": "regionColors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "6239:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        }
                      },
                      {
                        "id": 1634,
                        "name": "activity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "6253:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        },
                        {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        },
                        {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      ],
                      "id": 1630,
                      "name": "Rule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "6205:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Rule_$1475_storage_ptr_$",
                        "typeString": "type(struct GreenPassCertification.Rule storage pointer)"
                      }
                    },
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6205:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                      "typeString": "struct GreenPassCertification.Rule memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6186:76:9"
                },
                {
                  "assignments": [
                    1638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1638,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "6276:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "6268:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1637,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6268:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1650,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1642,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "6310:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1643,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "certificationType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1468,
                            "src": "6310:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            }
                          },
                          {
                            "expression": {
                              "id": 1644,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "6334:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1645,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "color",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1471,
                            "src": "6334:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            }
                          },
                          {
                            "expression": {
                              "id": 1646,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "6346:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "activity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1474,
                            "src": "6346:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            },
                            {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            },
                            {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          ],
                          "expression": {
                            "id": 1640,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6293:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6293:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6293:67:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1639,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "6282:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6282:80:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6268:94:9"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 1653,
                        "name": "_rulesSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "6401:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      {
                        "id": 1654,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1638,
                        "src": "6412:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1651,
                        "name": "EnumerableSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "6378:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1241_$",
                          "typeString": "type(library EnumerableSet)"
                        }
                      },
                      "id": 1652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 901,
                      "src": "6378:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$847_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
                      }
                    },
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6378:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 1658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6448:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 1602,
                    "id": 1659,
                    "nodeType": "Return",
                    "src": "6441:12:9"
                  },
                  "id": 1660,
                  "nodeType": "IfStatement",
                  "src": "6373:80:9",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6426:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 1602,
                    "id": 1657,
                    "nodeType": "Return",
                    "src": "6419:11:9"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1590,
              "nodeType": "StructuredDocumentation",
              "src": "5386:440:9",
              "text": " @dev funzione che dato un codice QR relativo a un greenpass ritorna `true` se è consentito\n effettuare una data attività `activity` in una data regione `region`.\n @param qrcode il qrcode di un greenpass.\n @param activity l'attività che si desidera svolgare.\n @param region la regione in cui si desidera svolgere l'attività.\n @return `true` se è consentito svolgere tale attività, `false` altrimenti."
            },
            "functionSelector": "24ea5214",
            "id": 1662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canDo",
            "nameLocation": "5838:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1592,
                  "mutability": "mutable",
                  "name": "qrcode",
                  "nameLocation": "5858:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "5844:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5844:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "mutability": "mutable",
                  "name": "activity",
                  "nameLocation": "5877:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "5866:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Activities_$1258",
                    "typeString": "enum Activity.Activities"
                  },
                  "typeName": {
                    "id": 1594,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1593,
                      "name": "Activities",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1258,
                      "src": "5866:10:9"
                    },
                    "referencedDeclaration": 1258,
                    "src": "5866:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Activities_$1258",
                      "typeString": "enum Activity.Activities"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1598,
                  "mutability": "mutable",
                  "name": "region",
                  "nameLocation": "5895:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "5887:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Regions_$1686",
                    "typeString": "enum Region.Regions"
                  },
                  "typeName": {
                    "id": 1597,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1596,
                      "name": "Regions",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1686,
                      "src": "5887:7:9"
                    },
                    "referencedDeclaration": 1686,
                    "src": "5887:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Regions_$1686",
                      "typeString": "enum Region.Regions"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5843:59:9"
            },
            "returnParameters": {
              "id": 1602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "5924:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5923:6:9"
            },
            "scope": 1663,
            "src": "5829:630:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1664,
        "src": "592:5870:9",
        "usedErrors": []
      }
    ],
    "src": "32:6430:9"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/GreenPassCertification.sol",
    "exportedSymbols": {
      "AccessControl": [
        308
      ],
      "Activity": [
        1259
      ],
      "Certification": [
        1342
      ],
      "Context": [
        403
      ],
      "ERC165": [
        630
      ],
      "EnumerableSet": [
        1241
      ],
      "GreenPassCertification": [
        1663
      ],
      "IAccessControl": [
        381
      ],
      "IERC165": [
        642
      ],
      "Region": [
        1861
      ],
      "RolesManager": [
        1918
      ],
      "Strings": [
        606
      ]
    },
    "id": 1664,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1344,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "id": 1345,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1242,
        "src": "66:65:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RolesManager.sol",
        "file": "./RolesManager.sol",
        "id": 1346,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1919,
        "src": "132:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Certification.sol",
        "file": "./Certification.sol",
        "id": 1347,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1343,
        "src": "161:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Region.sol",
        "file": "./Region.sol",
        "id": 1348,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1862,
        "src": "191:22:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Activity.sol",
        "file": "./Activity.sol",
        "id": 1349,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1664,
        "sourceUnit": 1260,
        "src": "214:24:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1351,
              "name": "RolesManager",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1918,
              "src": "627:12:9"
            },
            "id": 1352,
            "nodeType": "InheritanceSpecifier",
            "src": "627:12:9"
          },
          {
            "baseName": {
              "id": 1353,
              "name": "Certification",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1342,
              "src": "641:13:9"
            },
            "id": 1354,
            "nodeType": "InheritanceSpecifier",
            "src": "641:13:9"
          },
          {
            "baseName": {
              "id": 1355,
              "name": "Region",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1861,
              "src": "656:6:9"
            },
            "id": 1356,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:9"
          },
          {
            "baseName": {
              "id": 1357,
              "name": "Activity",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1259,
              "src": "664:8:9"
            },
            "id": 1358,
            "nodeType": "InheritanceSpecifier",
            "src": "664:8:9"
          }
        ],
        "canonicalName": "GreenPassCertification",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1350,
          "nodeType": "StructuredDocumentation",
          "src": "240:351:9",
          "text": " @title GreenPassCertification contract\n @author Alessandro Straziota, Michele Cirillo\n @notice Contratto che offre strumenti utili per la verifica della validità dei green pass rispetto a determinate attività.\n @dev Contratto che offre strumenti utili per la verifica della validità dei green pass rispetto a determinate attività."
        },
        "fullyImplemented": true,
        "id": 1663,
        "linearizedBaseContracts": [
          1663,
          1259,
          1861,
          1342,
          1918,
          308,
          630,
          642,
          381,
          403
        ],
        "name": "GreenPassCertification",
        "nameLocation": "601:22:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1359,
              "nodeType": "StructuredDocumentation",
              "src": "678:49:9",
              "text": " @dev mappa `QRCODE` => `GreenPass`"
            },
            "id": 1364,
            "mutability": "mutable",
            "name": "certificates",
            "nameLocation": "768:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1663,
            "src": "730:50:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
              "typeString": "mapping(string => struct Certification.GreenPass)"
            },
            "typeName": {
              "id": 1363,
              "keyType": {
                "id": 1360,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "739:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "730:29:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                "typeString": "mapping(string => struct Certification.GreenPass)"
              },
              "valueType": {
                "id": 1362,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1361,
                  "name": "GreenPass",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1283,
                  "src": "749:9:9"
                },
                "referencedDeclaration": 1283,
                "src": "749:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_GreenPass_$1283_storage_ptr",
                  "typeString": "struct Certification.GreenPass"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1398,
              "nodeType": "Block",
              "src": "1284:530:9",
              "statements": [
                {
                  "assignments": [
                    1378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1378,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nameLocation": "1430:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1398,
                      "src": "1413:28:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                        "typeString": "struct Certification.GreenPass"
                      },
                      "typeName": {
                        "id": 1377,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1376,
                          "name": "GreenPass",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1283,
                          "src": "1413:9:9"
                        },
                        "referencedDeclaration": 1283,
                        "src": "1413:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_storage_ptr",
                          "typeString": "struct Certification.GreenPass"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1391,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1380,
                        "name": "qrcode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "1463:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1381,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1511:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1511:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1383,
                        "name": "certificationType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1368,
                        "src": "1560:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        }
                      },
                      {
                        "expression": {
                          "id": 1384,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1619:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1619:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1386,
                          "name": "durations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1288,
                          "src": "1669:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_CertificationType_$1269_$_t_uint256_$",
                            "typeString": "mapping(enum Certification.CertificationType => uint256)"
                          }
                        },
                        "id": 1388,
                        "indexExpression": {
                          "id": 1387,
                          "name": "certificationType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1368,
                          "src": "1679:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CertificationType_$1269",
                            "typeString": "enum Certification.CertificationType"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1669:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1379,
                      "name": "GreenPass",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1283,
                      "src": "1444:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_GreenPass_$1283_storage_ptr_$",
                        "typeString": "type(struct Certification.GreenPass storage pointer)"
                      }
                    },
                    "id": 1390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:325:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                      "typeString": "struct Certification.GreenPass memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1413:356:9"
                },
                {
                  "expression": {
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1392,
                        "name": "certificates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "1775:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                          "typeString": "mapping(string memory => struct Certification.GreenPass storage ref)"
                        }
                      },
                      "id": 1394,
                      "indexExpression": {
                        "id": 1393,
                        "name": "qrcode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "1788:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1775:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                        "typeString": "struct Certification.GreenPass storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1395,
                      "name": "certificate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1378,
                      "src": "1798:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                        "typeString": "struct Certification.GreenPass memory"
                      }
                    },
                    "src": "1775:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                      "typeString": "struct Certification.GreenPass storage ref"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "1775:34:9"
                }
              ]
            },
            "documentation": {
              "id": 1365,
              "nodeType": "StructuredDocumentation",
              "src": "787:365:9",
              "text": " @dev Funzione che genera un certificato di tipo `certificationType` e lo assoccia al suo identificatore `qrcode`.\n La transazione va a buon fine solo se colui che invoca il metodo `msg.sender` ha il ruolo `CERTIFICATION_MINTER_ROLE`.\n @param certificationType il tipo del certificato rilasciato\n @param qrcode il codice qr del certificato"
            },
            "functionSelector": "8bbe97c2",
            "id": 1399,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1373,
                    "name": "CERTIFICATION_MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1877,
                    "src": "1257:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1374,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1372,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1248:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1248:35:9"
              }
            ],
            "name": "emitCertification",
            "nameLocation": "1164:17:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "certificationType",
                  "nameLocation": "1200:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "1182:35:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificationType_$1269",
                    "typeString": "enum Certification.CertificationType"
                  },
                  "typeName": {
                    "id": 1367,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1366,
                      "name": "CertificationType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1269,
                      "src": "1182:17:9"
                    },
                    "referencedDeclaration": 1269,
                    "src": "1182:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CertificationType_$1269",
                      "typeString": "enum Certification.CertificationType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1370,
                  "mutability": "mutable",
                  "name": "qrcode",
                  "nameLocation": "1233:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1399,
                  "src": "1219:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1369,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1181:59:9"
            },
            "returnParameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1284:0:9"
            },
            "scope": 1663,
            "src": "1155:659:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1423,
              "nodeType": "Block",
              "src": "2089:136:9",
              "statements": [
                {
                  "assignments": [
                    1409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1409,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nameLocation": "2112:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1423,
                      "src": "2095:28:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                        "typeString": "struct Certification.GreenPass"
                      },
                      "typeName": {
                        "id": 1408,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1407,
                          "name": "GreenPass",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1283,
                          "src": "2095:9:9"
                        },
                        "referencedDeclaration": 1283,
                        "src": "2095:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_storage_ptr",
                          "typeString": "struct Certification.GreenPass"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1413,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1410,
                      "name": "certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "2126:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                        "typeString": "mapping(string memory => struct Certification.GreenPass storage ref)"
                      }
                    },
                    "id": 1412,
                    "indexExpression": {
                      "id": 1411,
                      "name": "qrcode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "2139:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2126:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                      "typeString": "struct Certification.GreenPass storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2095:51:9"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1414,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2159:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2159:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1416,
                          "name": "certificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1409,
                          "src": "2177:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                            "typeString": "struct Certification.GreenPass memory"
                          }
                        },
                        "id": 1417,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "creation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1278,
                        "src": "2177:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 1418,
                          "name": "certificate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1409,
                          "src": "2200:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                            "typeString": "struct Certification.GreenPass memory"
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "duration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1280,
                        "src": "2200:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2177:43:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2159:61:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1406,
                  "id": 1422,
                  "nodeType": "Return",
                  "src": "2152:68:9"
                }
              ]
            },
            "documentation": {
              "id": 1400,
              "nodeType": "StructuredDocumentation",
              "src": "1818:200:9",
              "text": " @dev Funzione che dato il QR-code di un green pass ritorna `true` se è scaduto, `false` altrimenti.\n @param qrcode il QR-code presente su un green pass\n @return       isExpired"
            },
            "functionSelector": "c64fafbc",
            "id": 1424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isExpired",
            "nameLocation": "2030:9:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1402,
                  "mutability": "mutable",
                  "name": "qrcode",
                  "nameLocation": "2054:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2040:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1401,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2039:22:9"
            },
            "returnParameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "2083:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2083:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2082:6:9"
            },
            "scope": 1663,
            "src": "2021:204:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "2498:172:9",
              "statements": [
                {
                  "expression": {
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1433,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "2626:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                            "typeString": "mapping(string memory => struct Certification.GreenPass storage ref)"
                          }
                        },
                        "id": 1435,
                        "indexExpression": {
                          "id": 1434,
                          "name": "qrcode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "2639:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2626:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                          "typeString": "struct Certification.GreenPass storage ref"
                        }
                      },
                      "id": 1436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "invalidated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "2626:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2661:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2626:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1439,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:39:9"
                }
              ]
            },
            "documentation": {
              "id": 1425,
              "nodeType": "StructuredDocumentation",
              "src": "2229:170:9",
              "text": " @dev Funzione che dato il QR-code di un green pass lo invalida.\n Solo un indirizzo con ruolo `CERTIFICATION_MINTER_ROLE` può invocare questa funzione."
            },
            "functionSelector": "24f349f9",
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1430,
                    "name": "CERTIFICATION_MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1877,
                    "src": "2471:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1431,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1429,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2462:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2462:35:9"
              }
            ],
            "name": "invalidateCertificate",
            "nameLocation": "2411:21:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "qrcode",
                  "nameLocation": "2447:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "2433:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2433:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2432:22:9"
            },
            "returnParameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2498:0:9"
            },
            "scope": 1663,
            "src": "2402:268:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1460,
              "nodeType": "Block",
              "src": "2934:33:9",
              "statements": [
                {
                  "expression": {
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1454,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "2940:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Regions_$1686_$_t_enum$_Colors_$1690_$",
                          "typeString": "mapping(enum Region.Regions => enum Region.Colors)"
                        }
                      },
                      "id": 1456,
                      "indexExpression": {
                        "id": 1455,
                        "name": "region",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "2947:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Regions_$1686",
                          "typeString": "enum Region.Regions"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2940:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Colors_$1690",
                        "typeString": "enum Region.Colors"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1457,
                      "name": "color",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
                      "src": "2957:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Colors_$1690",
                        "typeString": "enum Region.Colors"
                      }
                    },
                    "src": "2940:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "id": 1459,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:22:9"
                }
              ]
            },
            "documentation": {
              "id": 1442,
              "nodeType": "StructuredDocumentation",
              "src": "2691:158:9",
              "text": " @dev Funzione che assegna il colore `color` alla regione `region`.\n Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione."
            },
            "functionSelector": "47201b84",
            "id": 1461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1451,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1872,
                    "src": "2922:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1450,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2913:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2913:20:9"
              }
            ],
            "name": "setRegionColor",
            "nameLocation": "2861:14:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1445,
                  "mutability": "mutable",
                  "name": "region",
                  "nameLocation": "2884:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "2876:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Regions_$1686",
                    "typeString": "enum Region.Regions"
                  },
                  "typeName": {
                    "id": 1444,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1443,
                      "name": "Regions",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1686,
                      "src": "2876:7:9"
                    },
                    "referencedDeclaration": 1686,
                    "src": "2876:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Regions_$1686",
                      "typeString": "enum Region.Regions"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1448,
                  "mutability": "mutable",
                  "name": "color",
                  "nameLocation": "2899:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "2892:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Colors_$1690",
                    "typeString": "enum Region.Colors"
                  },
                  "typeName": {
                    "id": 1447,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1446,
                      "name": "Colors",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1690,
                      "src": "2892:6:9"
                    },
                    "referencedDeclaration": 1690,
                    "src": "2892:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2875:30:9"
            },
            "returnParameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2934:0:9"
            },
            "scope": 1663,
            "src": "2852:115:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1465,
            "libraryName": {
              "id": 1462,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1241,
              "src": "3005:13:9"
            },
            "nodeType": "UsingForDirective",
            "src": "2999:49:9",
            "typeName": {
              "id": 1464,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1463,
                "name": "EnumerableSet.Bytes32Set",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 847,
                "src": "3023:24:9"
              },
              "referencedDeclaration": 847,
              "src": "3023:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$847_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            }
          },
          {
            "canonicalName": "GreenPassCertification.Rule",
            "id": 1475,
            "members": [
              {
                "constant": false,
                "id": 1468,
                "mutability": "mutable",
                "name": "certificationType",
                "nameLocation": "3593:17:9",
                "nodeType": "VariableDeclaration",
                "scope": 1475,
                "src": "3575:35:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_CertificationType_$1269",
                  "typeString": "enum Certification.CertificationType"
                },
                "typeName": {
                  "id": 1467,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1466,
                    "name": "CertificationType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1269,
                    "src": "3575:17:9"
                  },
                  "referencedDeclaration": 1269,
                  "src": "3575:17:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificationType_$1269",
                    "typeString": "enum Certification.CertificationType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1471,
                "mutability": "mutable",
                "name": "color",
                "nameLocation": "3623:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1475,
                "src": "3616:12:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Colors_$1690",
                  "typeString": "enum Region.Colors"
                },
                "typeName": {
                  "id": 1470,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1469,
                    "name": "Colors",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1690,
                    "src": "3616:6:9"
                  },
                  "referencedDeclaration": 1690,
                  "src": "3616:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Colors_$1690",
                    "typeString": "enum Region.Colors"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1474,
                "mutability": "mutable",
                "name": "activity",
                "nameLocation": "3645:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 1475,
                "src": "3634:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Activities_$1258",
                  "typeString": "enum Activity.Activities"
                },
                "typeName": {
                  "id": 1473,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1472,
                    "name": "Activities",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1258,
                    "src": "3634:10:9"
                  },
                  "referencedDeclaration": 1258,
                  "src": "3634:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Activities_$1258",
                    "typeString": "enum Activity.Activities"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rule",
            "nameLocation": "3564:4:9",
            "nodeType": "StructDefinition",
            "scope": 1663,
            "src": "3557:101:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1476,
              "nodeType": "StructuredDocumentation",
              "src": "3662:243:9",
              "text": " Se una regola `R` è presente nell'insieme delle regole valide, allora un utente\n avente il green pass di tipo `R.certificationType` potrà svolgere l'attività `R.activity`\n in una regione colorata del colore `R.color`."
            },
            "id": 1481,
            "mutability": "mutable",
            "name": "_rules",
            "nameLocation": "3942:6:9",
            "nodeType": "VariableDeclaration",
            "scope": 1663,
            "src": "3908:40:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Rule_$1475_storage_$",
              "typeString": "mapping(bytes32 => struct GreenPassCertification.Rule)"
            },
            "typeName": {
              "id": 1480,
              "keyType": {
                "id": 1477,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3917:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3908:25:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Rule_$1475_storage_$",
                "typeString": "mapping(bytes32 => struct GreenPassCertification.Rule)"
              },
              "valueType": {
                "id": 1479,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1478,
                  "name": "Rule",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1475,
                  "src": "3928:4:9"
                },
                "referencedDeclaration": 1475,
                "src": "3928:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Rule_$1475_storage_ptr",
                  "typeString": "struct GreenPassCertification.Rule"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1484,
            "mutability": "mutable",
            "name": "_rulesSet",
            "nameLocation": "3985:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 1663,
            "src": "3952:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
              "typeString": "struct EnumerableSet.Bytes32Set"
            },
            "typeName": {
              "id": 1483,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1482,
                "name": "EnumerableSet.Bytes32Set",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 847,
                "src": "3952:24:9"
              },
              "referencedDeclaration": 847,
              "src": "3952:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Set_$847_storage_ptr",
                "typeString": "struct EnumerableSet.Bytes32Set"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "4434:233:9",
              "statements": [
                {
                  "assignments": [
                    1502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1502,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "4452:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "4440:16:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                        "typeString": "struct GreenPassCertification.Rule"
                      },
                      "typeName": {
                        "id": 1501,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1500,
                          "name": "Rule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1475,
                          "src": "4440:4:9"
                        },
                        "referencedDeclaration": 1475,
                        "src": "4440:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rule_$1475_storage_ptr",
                          "typeString": "struct GreenPassCertification.Rule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1508,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1504,
                        "name": "certificationType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1488,
                        "src": "4464:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        }
                      },
                      {
                        "id": 1505,
                        "name": "color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "4483:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        }
                      },
                      {
                        "id": 1506,
                        "name": "activity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1494,
                        "src": "4490:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        },
                        {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        },
                        {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      ],
                      "id": 1503,
                      "name": "Rule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "4459:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Rule_$1475_storage_ptr_$",
                        "typeString": "type(struct GreenPassCertification.Rule storage pointer)"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                      "typeString": "struct GreenPassCertification.Rule memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4440:59:9"
                },
                {
                  "assignments": [
                    1510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1510,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "4513:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "4505:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1509,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4505:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1522,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1514,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1502,
                              "src": "4547:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1515,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "certificationType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1468,
                            "src": "4547:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            }
                          },
                          {
                            "expression": {
                              "id": 1516,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1502,
                              "src": "4571:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1517,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "color",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1471,
                            "src": "4571:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            }
                          },
                          {
                            "expression": {
                              "id": 1518,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1502,
                              "src": "4583:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "activity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1474,
                            "src": "4583:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            },
                            {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            },
                            {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          ],
                          "expression": {
                            "id": 1512,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "4530:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4530:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4530:67:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1511,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4519:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4519:80:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4505:94:9"
                },
                {
                  "expression": {
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1523,
                        "name": "_rules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "4605:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Rule_$1475_storage_$",
                          "typeString": "mapping(bytes32 => struct GreenPassCertification.Rule storage ref)"
                        }
                      },
                      "id": 1525,
                      "indexExpression": {
                        "id": 1524,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "4612:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4605:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_storage",
                        "typeString": "struct GreenPassCertification.Rule storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1526,
                      "name": "role",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1502,
                      "src": "4619:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                        "typeString": "struct GreenPassCertification.Rule memory"
                      }
                    },
                    "src": "4605:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rule_$1475_storage",
                      "typeString": "struct GreenPassCertification.Rule storage ref"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "4605:18:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1532,
                        "name": "_rulesSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "4647:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      {
                        "id": 1533,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "4658:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1529,
                        "name": "EnumerableSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "4629:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1241_$",
                          "typeString": "type(library EnumerableSet)"
                        }
                      },
                      "id": 1531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 865,
                      "src": "4629:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$847_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4629:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "4629:33:9"
                }
              ]
            },
            "documentation": {
              "id": 1485,
              "nodeType": "StructuredDocumentation",
              "src": "3999:315:9",
              "text": " @dev funzione che aggiunge una nuova regola all'insieme di regole valide.\n Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.\n @param certificationType il tipo della certificazione.\n @param color il colore della regione.\n @param activity l'attività in questione."
            },
            "functionSelector": "5e41256b",
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1497,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1872,
                    "src": "4422:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1496,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "4413:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4413:20:9"
              }
            ],
            "name": "addRole",
            "nameLocation": "4326:7:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1488,
                  "mutability": "mutable",
                  "name": "certificationType",
                  "nameLocation": "4352:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "4334:35:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificationType_$1269",
                    "typeString": "enum Certification.CertificationType"
                  },
                  "typeName": {
                    "id": 1487,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1486,
                      "name": "CertificationType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1269,
                      "src": "4334:17:9"
                    },
                    "referencedDeclaration": 1269,
                    "src": "4334:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CertificationType_$1269",
                      "typeString": "enum Certification.CertificationType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1491,
                  "mutability": "mutable",
                  "name": "color",
                  "nameLocation": "4378:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "4371:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Colors_$1690",
                    "typeString": "enum Region.Colors"
                  },
                  "typeName": {
                    "id": 1490,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1489,
                      "name": "Colors",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1690,
                      "src": "4371:6:9"
                    },
                    "referencedDeclaration": 1690,
                    "src": "4371:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1494,
                  "mutability": "mutable",
                  "name": "activity",
                  "nameLocation": "4396:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "4385:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Activities_$1258",
                    "typeString": "enum Activity.Activities"
                  },
                  "typeName": {
                    "id": 1493,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1492,
                      "name": "Activities",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1258,
                      "src": "4385:10:9"
                    },
                    "referencedDeclaration": 1258,
                    "src": "4385:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Activities_$1258",
                      "typeString": "enum Activity.Activities"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4333:72:9"
            },
            "returnParameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4434:0:9"
            },
            "scope": 1663,
            "src": "4317:350:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1588,
              "nodeType": "Block",
              "src": "5102:251:9",
              "statements": [
                {
                  "assignments": [
                    1555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1555,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "5120:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1588,
                      "src": "5108:16:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                        "typeString": "struct GreenPassCertification.Rule"
                      },
                      "typeName": {
                        "id": 1554,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1553,
                          "name": "Rule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1475,
                          "src": "5108:4:9"
                        },
                        "referencedDeclaration": 1475,
                        "src": "5108:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rule_$1475_storage_ptr",
                          "typeString": "struct GreenPassCertification.Rule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1561,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1557,
                        "name": "certificationType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "5132:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        }
                      },
                      {
                        "id": 1558,
                        "name": "color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "5151:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        }
                      },
                      {
                        "id": 1559,
                        "name": "activity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1547,
                        "src": "5158:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        },
                        {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        },
                        {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      ],
                      "id": 1556,
                      "name": "Rule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "5127:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Rule_$1475_storage_ptr_$",
                        "typeString": "type(struct GreenPassCertification.Rule storage pointer)"
                      }
                    },
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5127:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                      "typeString": "struct GreenPassCertification.Rule memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5108:59:9"
                },
                {
                  "assignments": [
                    1563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1563,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "5181:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1588,
                      "src": "5173:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1562,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5173:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1575,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1567,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1555,
                              "src": "5215:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "certificationType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1468,
                            "src": "5215:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            }
                          },
                          {
                            "expression": {
                              "id": 1569,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1555,
                              "src": "5239:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "color",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1471,
                            "src": "5239:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            }
                          },
                          {
                            "expression": {
                              "id": 1571,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1555,
                              "src": "5251:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "activity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1474,
                            "src": "5251:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            },
                            {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            },
                            {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          ],
                          "expression": {
                            "id": 1565,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5198:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5198:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5198:67:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1564,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "5187:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5187:80:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5173:94:9"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 1578,
                        "name": "_rulesSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "5298:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      {
                        "id": 1579,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1563,
                        "src": "5309:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1576,
                        "name": "EnumerableSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "5277:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1241_$",
                          "typeString": "type(library EnumerableSet)"
                        }
                      },
                      "id": 1577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 883,
                      "src": "5277:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$847_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5277:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1587,
                  "nodeType": "IfStatement",
                  "src": "5273:76:9",
                  "trueBody": {
                    "id": 1586,
                    "nodeType": "Block",
                    "src": "5316:33:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5324:18:9",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1581,
                              "name": "_rules",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "5331:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Rule_$1475_storage_$",
                                "typeString": "mapping(bytes32 => struct GreenPassCertification.Rule storage ref)"
                              }
                            },
                            "id": 1583,
                            "indexExpression": {
                              "id": 1582,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1563,
                              "src": "5338:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5331:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rule_$1475_storage",
                              "typeString": "struct GreenPassCertification.Rule storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1585,
                        "nodeType": "ExpressionStatement",
                        "src": "5324:18:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1538,
              "nodeType": "StructuredDocumentation",
              "src": "4671:308:9",
              "text": " @dev funzione che rimuove una regola all'insieme di regole valide.\n Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.\n @param certificationType il tipo della certificazione.\n @param color il colore della regione.\n @param activity l'attività in questione."
            },
            "functionSelector": "7d5bfe44",
            "id": 1589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1550,
                    "name": "ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1872,
                    "src": "5090:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1551,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1549,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "5081:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5081:20:9"
              }
            ],
            "name": "removeRole",
            "nameLocation": "4991:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "certificationType",
                  "nameLocation": "5020:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "5002:35:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CertificationType_$1269",
                    "typeString": "enum Certification.CertificationType"
                  },
                  "typeName": {
                    "id": 1540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1539,
                      "name": "CertificationType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1269,
                      "src": "5002:17:9"
                    },
                    "referencedDeclaration": 1269,
                    "src": "5002:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CertificationType_$1269",
                      "typeString": "enum Certification.CertificationType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "color",
                  "nameLocation": "5046:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "5039:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Colors_$1690",
                    "typeString": "enum Region.Colors"
                  },
                  "typeName": {
                    "id": 1543,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1542,
                      "name": "Colors",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1690,
                      "src": "5039:6:9"
                    },
                    "referencedDeclaration": 1690,
                    "src": "5039:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1547,
                  "mutability": "mutable",
                  "name": "activity",
                  "nameLocation": "5064:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1589,
                  "src": "5053:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Activities_$1258",
                    "typeString": "enum Activity.Activities"
                  },
                  "typeName": {
                    "id": 1546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1545,
                      "name": "Activities",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1258,
                      "src": "5053:10:9"
                    },
                    "referencedDeclaration": 1258,
                    "src": "5053:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Activities_$1258",
                      "typeString": "enum Activity.Activities"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5001:72:9"
            },
            "returnParameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5102:0:9"
            },
            "scope": 1663,
            "src": "4982:371:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1661,
              "nodeType": "Block",
              "src": "5930:529:9",
              "statements": [
                {
                  "assignments": [
                    1605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1605,
                      "mutability": "mutable",
                      "name": "greenPass",
                      "nameLocation": "5953:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "5936:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                        "typeString": "struct Certification.GreenPass"
                      },
                      "typeName": {
                        "id": 1604,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1603,
                          "name": "GreenPass",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1283,
                          "src": "5936:9:9"
                        },
                        "referencedDeclaration": 1283,
                        "src": "5936:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_storage_ptr",
                          "typeString": "struct Certification.GreenPass"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1609,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1606,
                      "name": "certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "5965:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_GreenPass_$1283_storage_$",
                        "typeString": "mapping(string memory => struct Certification.GreenPass storage ref)"
                      }
                    },
                    "id": 1608,
                    "indexExpression": {
                      "id": 1607,
                      "name": "qrcode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1592,
                      "src": "5978:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5965:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenPass_$1283_storage",
                      "typeString": "struct Certification.GreenPass storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5936:49:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1611,
                          "name": "qrcode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1592,
                          "src": "6073:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 1610,
                        "name": "isExpired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1424,
                        "src": "6063:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (string memory) view returns (bool)"
                        }
                      },
                      "id": 1612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6063:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "expression": {
                        "id": 1613,
                        "name": "greenPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1605,
                        "src": "6084:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                          "typeString": "struct Certification.GreenPass memory"
                        }
                      },
                      "id": 1614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invalidated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "6084:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6063:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1619,
                  "nodeType": "IfStatement",
                  "src": "6059:75:9",
                  "trueBody": {
                    "id": 1618,
                    "nodeType": "Block",
                    "src": "6107:27:9",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6122:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1602,
                        "id": 1617,
                        "nodeType": "Return",
                        "src": "6115:12:9"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1622,
                      "mutability": "mutable",
                      "name": "regionColors",
                      "nameLocation": "6151:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "6144:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Colors_$1690",
                        "typeString": "enum Region.Colors"
                      },
                      "typeName": {
                        "id": 1621,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1620,
                          "name": "Colors",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1690,
                          "src": "6144:6:9"
                        },
                        "referencedDeclaration": 1690,
                        "src": "6144:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1626,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1623,
                      "name": "colors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1696,
                      "src": "6166:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Regions_$1686_$_t_enum$_Colors_$1690_$",
                        "typeString": "mapping(enum Region.Regions => enum Region.Colors)"
                      }
                    },
                    "id": 1625,
                    "indexExpression": {
                      "id": 1624,
                      "name": "region",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1598,
                      "src": "6173:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Regions_$1686",
                        "typeString": "enum Region.Regions"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6166:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Colors_$1690",
                      "typeString": "enum Region.Colors"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6144:36:9"
                },
                {
                  "assignments": [
                    1629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1629,
                      "mutability": "mutable",
                      "name": "role",
                      "nameLocation": "6198:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "6186:16:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                        "typeString": "struct GreenPassCertification.Rule"
                      },
                      "typeName": {
                        "id": 1628,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1627,
                          "name": "Rule",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1475,
                          "src": "6186:4:9"
                        },
                        "referencedDeclaration": 1475,
                        "src": "6186:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rule_$1475_storage_ptr",
                          "typeString": "struct GreenPassCertification.Rule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1636,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1631,
                          "name": "greenPass",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1605,
                          "src": "6210:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GreenPass_$1283_memory_ptr",
                            "typeString": "struct Certification.GreenPass memory"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certificationType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1276,
                        "src": "6210:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        }
                      },
                      {
                        "id": 1633,
                        "name": "regionColors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "6239:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        }
                      },
                      {
                        "id": 1634,
                        "name": "activity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "6253:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CertificationType_$1269",
                          "typeString": "enum Certification.CertificationType"
                        },
                        {
                          "typeIdentifier": "t_enum$_Colors_$1690",
                          "typeString": "enum Region.Colors"
                        },
                        {
                          "typeIdentifier": "t_enum$_Activities_$1258",
                          "typeString": "enum Activity.Activities"
                        }
                      ],
                      "id": 1630,
                      "name": "Rule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "6205:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Rule_$1475_storage_ptr_$",
                        "typeString": "type(struct GreenPassCertification.Rule storage pointer)"
                      }
                    },
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6205:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                      "typeString": "struct GreenPassCertification.Rule memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6186:76:9"
                },
                {
                  "assignments": [
                    1638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1638,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "6276:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "6268:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1637,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6268:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1650,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1642,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "6310:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1643,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "certificationType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1468,
                            "src": "6310:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            }
                          },
                          {
                            "expression": {
                              "id": 1644,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "6334:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1645,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "color",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1471,
                            "src": "6334:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            }
                          },
                          {
                            "expression": {
                              "id": 1646,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "6346:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rule_$1475_memory_ptr",
                                "typeString": "struct GreenPassCertification.Rule memory"
                              }
                            },
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "activity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1474,
                            "src": "6346:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CertificationType_$1269",
                              "typeString": "enum Certification.CertificationType"
                            },
                            {
                              "typeIdentifier": "t_enum$_Colors_$1690",
                              "typeString": "enum Region.Colors"
                            },
                            {
                              "typeIdentifier": "t_enum$_Activities_$1258",
                              "typeString": "enum Activity.Activities"
                            }
                          ],
                          "expression": {
                            "id": 1640,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "6293:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "6293:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6293:67:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1639,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "6282:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6282:80:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6268:94:9"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 1653,
                        "name": "_rulesSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1484,
                        "src": "6401:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        }
                      },
                      {
                        "id": 1654,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1638,
                        "src": "6412:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Set_$847_storage",
                          "typeString": "struct EnumerableSet.Bytes32Set storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1651,
                        "name": "EnumerableSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "6378:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1241_$",
                          "typeString": "type(library EnumerableSet)"
                        }
                      },
                      "id": 1652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 901,
                      "src": "6378:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$847_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
                      }
                    },
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6378:38:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 1658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6448:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 1602,
                    "id": 1659,
                    "nodeType": "Return",
                    "src": "6441:12:9"
                  },
                  "id": 1660,
                  "nodeType": "IfStatement",
                  "src": "6373:80:9",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 1656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6426:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 1602,
                    "id": 1657,
                    "nodeType": "Return",
                    "src": "6419:11:9"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1590,
              "nodeType": "StructuredDocumentation",
              "src": "5386:440:9",
              "text": " @dev funzione che dato un codice QR relativo a un greenpass ritorna `true` se è consentito\n effettuare una data attività `activity` in una data regione `region`.\n @param qrcode il qrcode di un greenpass.\n @param activity l'attività che si desidera svolgare.\n @param region la regione in cui si desidera svolgere l'attività.\n @return `true` se è consentito svolgere tale attività, `false` altrimenti."
            },
            "functionSelector": "24ea5214",
            "id": 1662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canDo",
            "nameLocation": "5838:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1592,
                  "mutability": "mutable",
                  "name": "qrcode",
                  "nameLocation": "5858:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "5844:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5844:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "mutability": "mutable",
                  "name": "activity",
                  "nameLocation": "5877:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "5866:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Activities_$1258",
                    "typeString": "enum Activity.Activities"
                  },
                  "typeName": {
                    "id": 1594,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1593,
                      "name": "Activities",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1258,
                      "src": "5866:10:9"
                    },
                    "referencedDeclaration": 1258,
                    "src": "5866:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Activities_$1258",
                      "typeString": "enum Activity.Activities"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1598,
                  "mutability": "mutable",
                  "name": "region",
                  "nameLocation": "5895:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "5887:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Regions_$1686",
                    "typeString": "enum Region.Regions"
                  },
                  "typeName": {
                    "id": 1597,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1596,
                      "name": "Regions",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1686,
                      "src": "5887:7:9"
                    },
                    "referencedDeclaration": 1686,
                    "src": "5887:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Regions_$1686",
                      "typeString": "enum Region.Regions"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5843:59:9"
            },
            "returnParameters": {
              "id": 1602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "5924:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5923:6:9"
            },
            "scope": 1663,
            "src": "5829:630:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1664,
        "src": "592:5870:9",
        "usedErrors": []
      }
    ],
    "src": "32:6430:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xCDd2e2FBA8b07E6dc266442776FC2046C19c7078",
      "transactionHash": "0x9f1a467f9aa4b30fef051e719973e2061250b2e083e1cc47214df1ba70361c77"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-02-01T00:20:36.576Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Alessandro Straziota, Michele Cirillo",
    "details": "Contratto che offre strumenti utili per la verifica della validità dei green pass rispetto a determinate attività.",
    "kind": "dev",
    "methods": {
      "addRole(uint8,uint8,uint8)": {
        "details": "funzione che aggiunge una nuova regola all'insieme di regole valide. Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.",
        "params": {
          "activity": "l'attività in questione.",
          "certificationType": "il tipo della certificazione.",
          "color": "il colore della regione."
        }
      },
      "canDo(string,uint8,uint8)": {
        "details": "funzione che dato un codice QR relativo a un greenpass ritorna `true` se è consentito effettuare una data attività `activity` in una data regione `region`.",
        "params": {
          "activity": "l'attività che si desidera svolgare.",
          "qrcode": "il qrcode di un greenpass.",
          "region": "la regione in cui si desidera svolgere l'attività."
        },
        "returns": {
          "_0": "`true` se è consentito svolgere tale attività, `false` altrimenti."
        }
      },
      "emitCertification(uint8,string)": {
        "details": "Funzione che genera un certificato di tipo `certificationType` e lo assoccia al suo identificatore `qrcode`. La transazione va a buon fine solo se colui che invoca il metodo `msg.sender` ha il ruolo `CERTIFICATION_MINTER_ROLE`.",
        "params": {
          "certificationType": "il tipo del certificato rilasciato",
          "qrcode": "il codice qr del certificato"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantCertificationMinterRole(address)": {
        "details": "funzione che assegna il ruolo `CERTIFICATION_MINTER_ROLE` che consente ad un indirizzo di generare nuovi certificati. Questo metodo può essere invocato solamente dagli indirizzi con il ruolo `ADMIN_ROLE`.",
        "params": {
          "to": "indirizzo a cui assegnare ruolo `CERTIFICATION_MINTER_ROLE`."
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "invalidateCertificate(string)": {
        "details": "Funzione che dato il QR-code di un green pass lo invalida. Solo un indirizzo con ruolo `CERTIFICATION_MINTER_ROLE` può invocare questa funzione."
      },
      "isExpired(string)": {
        "details": "Funzione che dato il QR-code di un green pass ritorna `true` se è scaduto, `false` altrimenti.",
        "params": {
          "qrcode": "il QR-code presente su un green pass"
        },
        "returns": {
          "_0": "isExpired"
        }
      },
      "removeRole(uint8,uint8,uint8)": {
        "details": "funzione che rimuove una regola all'insieme di regole valide. Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione.",
        "params": {
          "activity": "l'attività in questione.",
          "certificationType": "il tipo della certificazione.",
          "color": "il colore della regione."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeCertificationMinterRole(address)": {
        "details": "funzione che revoca il ruolo `CERTIFICATION_MINTER_ROLE` ad un indirizzo. Questo metodo può essere invocato solamente dagli indirizzi con il ruolo `ADMIN_ROLE`. See {grantCertificationMinterRole}.",
        "params": {
          "to": "indirizzo a cui assegnare ruolo `CERTIFICATION_MINTER_ROLE`."
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setRegionColor(uint8,uint8)": {
        "details": "Funzione che assegna il colore `color` alla regione `region`. Solo un indirizzo con ruolo `ADMIN_ROLE` può invocare questa funzione."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "stateVariables": {
      "certificates": {
        "details": "mappa `QRCODE` => `GreenPass`"
      }
    },
    "title": "GreenPassCertification contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Contratto che offre strumenti utili per la verifica della validità dei green pass rispetto a determinate attività.",
    "version": 1
  }
}